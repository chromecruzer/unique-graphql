{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://gqlrest/./node_modules/graphql/language/ast.js","webpack://gqlrest/./node_modules/ws/lib/buffer-util.js","webpack://gqlrest/./node_modules/ws/lib/constants.js","webpack://gqlrest/./node_modules/ws/lib/event-target.js","webpack://gqlrest/./node_modules/ws/lib/extension.js","webpack://gqlrest/./node_modules/ws/lib/limiter.js","webpack://gqlrest/./node_modules/ws/lib/permessage-deflate.js","webpack://gqlrest/./node_modules/ws/lib/receiver.js","webpack://gqlrest/./node_modules/ws/lib/sender.js","webpack://gqlrest/./node_modules/ws/lib/stream.js","webpack://gqlrest/./node_modules/ws/lib/subprotocol.js","webpack://gqlrest/./node_modules/ws/lib/validation.js","webpack://gqlrest/./node_modules/ws/lib/websocket-server.js","webpack://gqlrest/./node_modules/ws/lib/websocket.js","webpack://gqlrest/external node-commonjs \"buffer\"","webpack://gqlrest/external node-commonjs \"crypto\"","webpack://gqlrest/external node-commonjs \"events\"","webpack://gqlrest/external node-commonjs \"http\"","webpack://gqlrest/external node-commonjs \"https\"","webpack://gqlrest/external node-commonjs \"net\"","webpack://gqlrest/external node-commonjs \"stream\"","webpack://gqlrest/external node-commonjs \"tls\"","webpack://gqlrest/external node-commonjs \"url\"","webpack://gqlrest/external node-commonjs \"zlib\"","webpack://gqlrest/webpack/bootstrap","webpack://gqlrest/external commonjs \"express\"","webpack://gqlrest/external commonjs \"cors\"","webpack://gqlrest/external commonjs \"colors\"","webpack://gqlrest/external commonjs \"graphql-yoga\"","webpack://gqlrest/external commonjs \"@graphql-tools/load-files\"","webpack://gqlrest/external commonjs \"graphql\"","webpack://gqlrest/./node_modules/@graphql-tools/utils/esm/comments.js","webpack://gqlrest/./node_modules/cross-inspect/esm/index.js","webpack://gqlrest/./node_modules/@graphql-tools/utils/esm/astFromType.js","webpack://gqlrest/./node_modules/@graphql-tools/utils/esm/astFromValueUntyped.js","webpack://gqlrest/./node_modules/@graphql-tools/utils/esm/astFromValue.js","webpack://gqlrest/./node_modules/@graphql-tools/utils/esm/jsutils.js","webpack://gqlrest/./node_modules/@graphql-tools/utils/esm/descriptionFromObject.js","webpack://gqlrest/./node_modules/@graphql-tools/utils/esm/get-directives.js","webpack://gqlrest/./node_modules/@graphql-tools/utils/esm/helpers.js","webpack://gqlrest/./node_modules/@graphql-tools/utils/esm/memoize.js","webpack://gqlrest/./node_modules/@graphql-tools/utils/esm/rootTypes.js","webpack://gqlrest/./node_modules/@graphql-tools/utils/esm/print-schema-with-directives.js","webpack://gqlrest/./node_modules/@graphql-tools/merge/esm/typedefs-mergers/utils.js","webpack://gqlrest/./node_modules/@graphql-tools/merge/esm/typedefs-mergers/directives.js","webpack://gqlrest/./node_modules/@graphql-tools/merge/esm/typedefs-mergers/enum-values.js","webpack://gqlrest/./node_modules/@graphql-tools/merge/esm/typedefs-mergers/enum.js","webpack://gqlrest/./node_modules/@graphql-tools/merge/esm/typedefs-mergers/arguments.js","webpack://gqlrest/./node_modules/@graphql-tools/merge/esm/typedefs-mergers/fields.js","webpack://gqlrest/./node_modules/@graphql-tools/merge/esm/typedefs-mergers/input-type.js","webpack://gqlrest/./node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-named-type-array.js","webpack://gqlrest/./node_modules/@graphql-tools/merge/esm/typedefs-mergers/interface.js","webpack://gqlrest/./node_modules/@graphql-tools/merge/esm/typedefs-mergers/scalar.js","webpack://gqlrest/./node_modules/@graphql-tools/merge/esm/typedefs-mergers/schema-def.js","webpack://gqlrest/./node_modules/@graphql-tools/merge/esm/typedefs-mergers/type.js","webpack://gqlrest/./node_modules/@graphql-tools/merge/esm/typedefs-mergers/union.js","webpack://gqlrest/./node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-nodes.js","webpack://gqlrest/./node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-typedefs.js","webpack://gqlrest/./node_modules/@graphql-tools/utils/esm/isDocumentNode.js","webpack://gqlrest/./node_modules/graphql-ws/lib/utils.mjs","webpack://gqlrest/./node_modules/graphql-ws/lib/common.mjs","webpack://gqlrest/./node_modules/graphql-ws/lib/server.mjs","webpack://gqlrest/external node-commonjs \"path\"","webpack://gqlrest/./_db.js","webpack://gqlrest/./resolvers/queryResolvers.js","webpack://gqlrest/./resolvers/mutationResolvers.js","webpack://gqlrest/external commonjs \"graphql-subscriptions\"","webpack://gqlrest/./app.js","webpack://gqlrest/./node_modules/graphql-ws/lib/use/ws.mjs"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.Token =\n  exports.QueryDocumentKeys =\n  exports.OperationTypeNode =\n  exports.Location =\n    void 0;\nexports.isNode = isNode;\n\n/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nclass Location {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  constructor(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Location';\n  }\n\n  toJSON() {\n    return {\n      start: this.start,\n      end: this.end,\n    };\n  }\n}\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexports.Location = Location;\n\nclass Token {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   *\n   * Note: is undefined for punctuation tokens, but typed as string for\n   * convenience in the parser.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  constructor(kind, start, end, line, column, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    this.value = value;\n    this.prev = null;\n    this.next = null;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Token';\n  }\n\n  toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column,\n    };\n  }\n}\n/**\n * The list of all possible AST node types.\n */\n\nexports.Token = Token;\n\n/**\n * @internal\n */\nconst QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: [\n    'name',\n    'variableDefinitions',\n    'directives',\n    'selectionSet',\n  ],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: [\n    'name', // Note: fragment variable definitions are deprecated and will removed in v17.0.0\n    'variableDefinitions',\n    'typeCondition',\n    'directives',\n    'selectionSet',\n  ],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: [\n    'description',\n    'name',\n    'type',\n    'defaultValue',\n    'directives',\n  ],\n  InterfaceTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields'],\n};\nexports.QueryDocumentKeys = QueryDocumentKeys;\nconst kindValues = new Set(Object.keys(QueryDocumentKeys));\n/**\n * @internal\n */\n\nfunction isNode(maybeNode) {\n  const maybeKind =\n    maybeNode === null || maybeNode === void 0 ? void 0 : maybeNode.kind;\n  return typeof maybeKind === 'string' && kindValues.has(maybeKind);\n}\n/** Name */\n\nvar OperationTypeNode;\nexports.OperationTypeNode = OperationTypeNode;\n\n(function (OperationTypeNode) {\n  OperationTypeNode['QUERY'] = 'query';\n  OperationTypeNode['MUTATION'] = 'mutation';\n  OperationTypeNode['SUBSCRIPTION'] = 'subscription';\n})(OperationTypeNode || (exports.OperationTypeNode = OperationTypeNode = {}));\n","'use strict';\n\nconst { EMPTY_BUFFER } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat(list, totalLength) {\n  if (list.length === 0) return EMPTY_BUFFER;\n  if (list.length === 1) return list[0];\n\n  const target = Buffer.allocUnsafe(totalLength);\n  let offset = 0;\n\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    target.set(buf, offset);\n    offset += buf.length;\n  }\n\n  if (offset < totalLength) {\n    return new FastBuffer(target.buffer, target.byteOffset, offset);\n  }\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask(source, mask, output, offset, length) {\n  for (let i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask(buffer, mask) {\n  for (let i = 0; i < buffer.length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} buf The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n * @public\n */\nfunction toArrayBuffer(buf) {\n  if (buf.length === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.length);\n}\n\n/**\n * Converts `data` to a `Buffer`.\n *\n * @param {*} data The data to convert\n * @return {Buffer} The buffer\n * @throws {TypeError}\n * @public\n */\nfunction toBuffer(data) {\n  toBuffer.readOnly = true;\n\n  if (Buffer.isBuffer(data)) return data;\n\n  let buf;\n\n  if (data instanceof ArrayBuffer) {\n    buf = new FastBuffer(data);\n  } else if (ArrayBuffer.isView(data)) {\n    buf = new FastBuffer(data.buffer, data.byteOffset, data.byteLength);\n  } else {\n    buf = Buffer.from(data);\n    toBuffer.readOnly = false;\n  }\n\n  return buf;\n}\n\nmodule.exports = {\n  concat,\n  mask: _mask,\n  toArrayBuffer,\n  toBuffer,\n  unmask: _unmask\n};\n\n/* istanbul ignore else  */\nif (!process.env.WS_NO_BUFFER_UTIL) {\n  try {\n    const bufferUtil = require('bufferutil');\n\n    module.exports.mask = function (source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bufferUtil.mask(source, mask, output, offset, length);\n    };\n\n    module.exports.unmask = function (buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bufferUtil.unmask(buffer, mask);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n","'use strict';\n\nconst BINARY_TYPES = ['nodebuffer', 'arraybuffer', 'fragments'];\nconst hasBlob = typeof Blob !== 'undefined';\n\nif (hasBlob) BINARY_TYPES.push('blob');\n\nmodule.exports = {\n  BINARY_TYPES,\n  EMPTY_BUFFER: Buffer.alloc(0),\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  hasBlob,\n  kForOnEventAttribute: Symbol('kIsForOnEventAttribute'),\n  kListener: Symbol('kListener'),\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  NOOP: () => {}\n};\n","'use strict';\n\nconst { kForOnEventAttribute, kListener } = require('./constants');\n\nconst kCode = Symbol('kCode');\nconst kData = Symbol('kData');\nconst kError = Symbol('kError');\nconst kMessage = Symbol('kMessage');\nconst kReason = Symbol('kReason');\nconst kTarget = Symbol('kTarget');\nconst kType = Symbol('kType');\nconst kWasClean = Symbol('kWasClean');\n\n/**\n * Class representing an event.\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @throws {TypeError} If the `type` argument is not specified\n   */\n  constructor(type) {\n    this[kTarget] = null;\n    this[kType] = type;\n  }\n\n  /**\n   * @type {*}\n   */\n  get target() {\n    return this[kTarget];\n  }\n\n  /**\n   * @type {String}\n   */\n  get type() {\n    return this[kType];\n  }\n}\n\nObject.defineProperty(Event.prototype, 'target', { enumerable: true });\nObject.defineProperty(Event.prototype, 'type', { enumerable: true });\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {Number} [options.code=0] The status code explaining why the\n   *     connection was closed\n   * @param {String} [options.reason=''] A human-readable string explaining why\n   *     the connection was closed\n   * @param {Boolean} [options.wasClean=false] Indicates whether or not the\n   *     connection was cleanly closed\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kCode] = options.code === undefined ? 0 : options.code;\n    this[kReason] = options.reason === undefined ? '' : options.reason;\n    this[kWasClean] = options.wasClean === undefined ? false : options.wasClean;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get code() {\n    return this[kCode];\n  }\n\n  /**\n   * @type {String}\n   */\n  get reason() {\n    return this[kReason];\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get wasClean() {\n    return this[kWasClean];\n  }\n}\n\nObject.defineProperty(CloseEvent.prototype, 'code', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'reason', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'wasClean', { enumerable: true });\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.error=null] The error that generated this event\n   * @param {String} [options.message=''] The error message\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kError] = options.error === undefined ? null : options.error;\n    this[kMessage] = options.message === undefined ? '' : options.message;\n  }\n\n  /**\n   * @type {*}\n   */\n  get error() {\n    return this[kError];\n  }\n\n  /**\n   * @type {String}\n   */\n  get message() {\n    return this[kMessage];\n  }\n}\n\nObject.defineProperty(ErrorEvent.prototype, 'error', { enumerable: true });\nObject.defineProperty(ErrorEvent.prototype, 'message', { enumerable: true });\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.data=null] The message content\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kData] = options.data === undefined ? null : options.data;\n  }\n\n  /**\n   * @type {*}\n   */\n  get data() {\n    return this[kData];\n  }\n}\n\nObject.defineProperty(MessageEvent.prototype, 'data', { enumerable: true });\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} type A string representing the event type to listen for\n   * @param {(Function|Object)} handler The listener to add\n   * @param {Object} [options] An options object specifies characteristics about\n   *     the event listener\n   * @param {Boolean} [options.once=false] A `Boolean` indicating that the\n   *     listener should be invoked at most once after being added. If `true`,\n   *     the listener would be automatically removed when invoked.\n   * @public\n   */\n  addEventListener(type, handler, options = {}) {\n    for (const listener of this.listeners(type)) {\n      if (\n        !options[kForOnEventAttribute] &&\n        listener[kListener] === handler &&\n        !listener[kForOnEventAttribute]\n      ) {\n        return;\n      }\n    }\n\n    let wrapper;\n\n    if (type === 'message') {\n      wrapper = function onMessage(data, isBinary) {\n        const event = new MessageEvent('message', {\n          data: isBinary ? data : data.toString()\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'close') {\n      wrapper = function onClose(code, message) {\n        const event = new CloseEvent('close', {\n          code,\n          reason: message.toString(),\n          wasClean: this._closeFrameReceived && this._closeFrameSent\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'error') {\n      wrapper = function onError(error) {\n        const event = new ErrorEvent('error', {\n          error,\n          message: error.message\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'open') {\n      wrapper = function onOpen() {\n        const event = new Event('open');\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else {\n      return;\n    }\n\n    wrapper[kForOnEventAttribute] = !!options[kForOnEventAttribute];\n    wrapper[kListener] = handler;\n\n    if (options.once) {\n      this.once(type, wrapper);\n    } else {\n      this.on(type, wrapper);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} type A string representing the event type to remove\n   * @param {(Function|Object)} handler The listener to remove\n   * @public\n   */\n  removeEventListener(type, handler) {\n    for (const listener of this.listeners(type)) {\n      if (listener[kListener] === handler && !listener[kForOnEventAttribute]) {\n        this.removeListener(type, listener);\n        break;\n      }\n    }\n  }\n};\n\nmodule.exports = {\n  CloseEvent,\n  ErrorEvent,\n  Event,\n  EventTarget,\n  MessageEvent\n};\n\n/**\n * Call an event listener\n *\n * @param {(Function|Object)} listener The listener to call\n * @param {*} thisArg The value to use as `this`` when calling the listener\n * @param {Event} event The event to pass to the listener\n * @private\n */\nfunction callListener(listener, thisArg, event) {\n  if (typeof listener === 'object' && listener.handleEvent) {\n    listener.handleEvent.call(listener, event);\n  } else {\n    listener.call(thisArg, event);\n  }\n}\n","'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push(dest, name, elem) {\n  if (dest[name] === undefined) dest[name] = [elem];\n  else dest[name].push(elem);\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse(header) {\n  const offers = Object.create(null);\n  let params = Object.create(null);\n  let mustUnescape = false;\n  let isEscaping = false;\n  let inQuotes = false;\n  let extensionName;\n  let paramName;\n  let start = -1;\n  let code = -1;\n  let end = -1;\n  let i = 0;\n\n  for (; i < header.length; i++) {\n    code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (\n        i !== 0 &&\n        (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n      ) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = Object.create(null);\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22 /* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c /* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        let value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes || code === 0x20 || code === 0x09) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, params);\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format(extensions) {\n  return Object.keys(extensions)\n    .map((extension) => {\n      let configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations\n        .map((params) => {\n          return [extension]\n            .concat(\n              Object.keys(params).map((k) => {\n                let values = params[k];\n                if (!Array.isArray(values)) values = [values];\n                return values\n                  .map((v) => (v === true ? k : `${k}=${v}`))\n                  .join('; ');\n              })\n            )\n            .join('; ');\n        })\n        .join(', ');\n    })\n    .join(', ');\n}\n\nmodule.exports = { format, parse };\n","'use strict';\n\nconst kDone = Symbol('kDone');\nconst kRun = Symbol('kRun');\n\n/**\n * A very simple job queue with adjustable concurrency. Adapted from\n * https://github.com/STRML/async-limiter\n */\nclass Limiter {\n  /**\n   * Creates a new `Limiter`.\n   *\n   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed\n   *     to run concurrently\n   */\n  constructor(concurrency) {\n    this[kDone] = () => {\n      this.pending--;\n      this[kRun]();\n    };\n    this.concurrency = concurrency || Infinity;\n    this.jobs = [];\n    this.pending = 0;\n  }\n\n  /**\n   * Adds a job to the queue.\n   *\n   * @param {Function} job The job to run\n   * @public\n   */\n  add(job) {\n    this.jobs.push(job);\n    this[kRun]();\n  }\n\n  /**\n   * Removes a job from the queue and runs it if possible.\n   *\n   * @private\n   */\n  [kRun]() {\n    if (this.pending === this.concurrency) return;\n\n    if (this.jobs.length) {\n      const job = this.jobs.shift();\n\n      this.pending++;\n      job(this[kDone]);\n    }\n  }\n}\n\nmodule.exports = Limiter;\n","'use strict';\n\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst Limiter = require('./limiter');\nconst { kStatusCode } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed if context takeover is disabled\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      this._inflate.close();\n      this._inflate = null;\n    }\n\n    if (this._deflate) {\n      const callback = this._deflate[kCallback];\n\n      this._deflate.close();\n      this._deflate = null;\n\n      if (callback) {\n        callback(\n          new Error(\n            'The deflate stream was closed while data was being processed'\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        let value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({\n        ...this._options.zlibInflateOptions,\n        windowBits\n      });\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (this._inflate._readableState.endEmitted) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n\n        if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n          this._inflate.reset();\n        }\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        ...this._options.zlibDeflateOptions,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kCallback] = callback;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      if (!this._deflate) {\n        //\n        // The deflate stream was closed while data was being processed.\n        //\n        return;\n      }\n\n      let data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) {\n        data = new FastBuffer(data.buffer, data.byteOffset, data.length - 4);\n      }\n\n      //\n      // Ensure that the callback will not be called again in\n      // `PerMessageDeflate#cleanup()`.\n      //\n      this._deflate[kCallback] = null;\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._deflate.reset();\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';\n  this[kError][kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n  err[kStatusCode] = 1007;\n  this[kCallback](err);\n}\n","'use strict';\n\nconst { Writable } = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = require('./constants');\nconst { concat, toArrayBuffer, unmask } = require('./buffer-util');\nconst { isValidStatusCode, isValidUTF8 } = require('./validation');\n\nconst FastBuffer = Buffer[Symbol.species];\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\nconst DEFER_EVENT = 6;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {String} [options.binaryType=nodebuffer] The type for binary data\n   * @param {Object} [options.extensions] An object containing the negotiated\n   *     extensions\n   * @param {Boolean} [options.isServer=false] Specifies whether to operate in\n   *     client or server mode\n   * @param {Number} [options.maxPayload=0] The maximum allowed message length\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   */\n  constructor(options = {}) {\n    super();\n\n    this._allowSynchronousEvents =\n      options.allowSynchronousEvents !== undefined\n        ? options.allowSynchronousEvents\n        : true;\n    this._binaryType = options.binaryType || BINARY_TYPES[0];\n    this._extensions = options.extensions || {};\n    this._isServer = !!options.isServer;\n    this._maxPayload = options.maxPayload | 0;\n    this._skipUTF8Validation = !!options.skipUTF8Validation;\n    this[kWebSocket] = undefined;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._errored = false;\n    this._loop = false;\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = new FastBuffer(\n        buf.buffer,\n        buf.byteOffset + n,\n        buf.length - n\n      );\n\n      return new FastBuffer(buf.buffer, buf.byteOffset, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = new FastBuffer(\n          buf.buffer,\n          buf.byteOffset + n,\n          buf.length - n\n        );\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          this.getInfo(cb);\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          this.getPayloadLength16(cb);\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          this.getPayloadLength64(cb);\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          this.getData(cb);\n          break;\n        case INFLATING:\n        case DEFER_EVENT:\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    if (!this._errored) cb();\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getInfo(cb) {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      const error = this.createError(\n        RangeError,\n        'RSV2 and RSV3 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_2_3'\n      );\n\n      cb(error);\n      return;\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      const error = this.createError(\n        RangeError,\n        'RSV1 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_1'\n      );\n\n      cb(error);\n      return;\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        const error = this.createError(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (!this._fragmented) {\n        const error = this.createError(\n          RangeError,\n          'invalid opcode 0',\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n\n        cb(error);\n        return;\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        const error = this.createError(\n          RangeError,\n          `invalid opcode ${this._opcode}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n\n        cb(error);\n        return;\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        const error = this.createError(\n          RangeError,\n          'FIN must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_FIN'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (compressed) {\n        const error = this.createError(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (\n        this._payloadLength > 0x7d ||\n        (this._opcode === 0x08 && this._payloadLength === 1)\n      ) {\n        const error = this.createError(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n\n        cb(error);\n        return;\n      }\n    } else {\n      const error = this.createError(\n        RangeError,\n        `invalid opcode ${this._opcode}`,\n        true,\n        1002,\n        'WS_ERR_INVALID_OPCODE'\n      );\n\n      cb(error);\n      return;\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._isServer) {\n      if (!this._masked) {\n        const error = this.createError(\n          RangeError,\n          'MASK must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_MASK'\n        );\n\n        cb(error);\n        return;\n      }\n    } else if (this._masked) {\n      const error = this.createError(\n        RangeError,\n        'MASK must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_MASK'\n      );\n\n      cb(error);\n      return;\n    }\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else this.haveLength(cb);\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getPayloadLength16(cb) {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    this.haveLength(cb);\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getPayloadLength64(cb) {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      const error = this.createError(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009,\n        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'\n      );\n\n      cb(error);\n      return;\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    this.haveLength(cb);\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  haveLength(cb) {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        const error = this.createError(\n          RangeError,\n          'Max payload size exceeded',\n          false,\n          1009,\n          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n        );\n\n        cb(error);\n        return;\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n\n      if (\n        this._masked &&\n        (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0\n      ) {\n        unmask(data, this._mask);\n      }\n    }\n\n    if (this._opcode > 0x07) {\n      this.controlMessage(data, cb);\n      return;\n    }\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its length is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    this.dataMessage(cb);\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          const error = this.createError(\n            RangeError,\n            'Max payload size exceeded',\n            false,\n            1009,\n            'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n          );\n\n          cb(error);\n          return;\n        }\n\n        this._fragments.push(buf);\n      }\n\n      this.dataMessage(cb);\n      if (this._state === GET_INFO) this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  dataMessage(cb) {\n    if (!this._fin) {\n      this._state = GET_INFO;\n      return;\n    }\n\n    const messageLength = this._messageLength;\n    const fragments = this._fragments;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragmented = 0;\n    this._fragments = [];\n\n    if (this._opcode === 2) {\n      let data;\n\n      if (this._binaryType === 'nodebuffer') {\n        data = concat(fragments, messageLength);\n      } else if (this._binaryType === 'arraybuffer') {\n        data = toArrayBuffer(concat(fragments, messageLength));\n      } else if (this._binaryType === 'blob') {\n        data = new Blob(fragments);\n      } else {\n        data = fragments;\n      }\n\n      if (this._allowSynchronousEvents) {\n        this.emit('message', data, true);\n        this._state = GET_INFO;\n      } else {\n        this._state = DEFER_EVENT;\n        setImmediate(() => {\n          this.emit('message', data, true);\n          this._state = GET_INFO;\n          this.startLoop(cb);\n        });\n      }\n    } else {\n      const buf = concat(fragments, messageLength);\n\n      if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n        const error = this.createError(\n          Error,\n          'invalid UTF-8 sequence',\n          true,\n          1007,\n          'WS_ERR_INVALID_UTF8'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (this._state === INFLATING || this._allowSynchronousEvents) {\n        this.emit('message', buf, false);\n        this._state = GET_INFO;\n      } else {\n        this._state = DEFER_EVENT;\n        setImmediate(() => {\n          this.emit('message', buf, false);\n          this._state = GET_INFO;\n          this.startLoop(cb);\n        });\n      }\n    }\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data, cb) {\n    if (this._opcode === 0x08) {\n      if (data.length === 0) {\n        this._loop = false;\n        this.emit('conclude', 1005, EMPTY_BUFFER);\n        this.end();\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode(code)) {\n          const error = this.createError(\n            RangeError,\n            `invalid status code ${code}`,\n            true,\n            1002,\n            'WS_ERR_INVALID_CLOSE_CODE'\n          );\n\n          cb(error);\n          return;\n        }\n\n        const buf = new FastBuffer(\n          data.buffer,\n          data.byteOffset + 2,\n          data.length - 2\n        );\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          const error = this.createError(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n\n          cb(error);\n          return;\n        }\n\n        this._loop = false;\n        this.emit('conclude', code, buf);\n        this.end();\n      }\n\n      this._state = GET_INFO;\n      return;\n    }\n\n    if (this._allowSynchronousEvents) {\n      this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);\n      this._state = GET_INFO;\n    } else {\n      this._state = DEFER_EVENT;\n      setImmediate(() => {\n        this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);\n        this._state = GET_INFO;\n        this.startLoop(cb);\n      });\n    }\n  }\n\n  /**\n   * Builds an error object.\n   *\n   * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n   * @param {String} message The error message\n   * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n   *     `message`\n   * @param {Number} statusCode The status code\n   * @param {String} errorCode The exposed error code\n   * @return {(Error|RangeError)} The error\n   * @private\n   */\n  createError(ErrorCtor, message, prefix, statusCode, errorCode) {\n    this._loop = false;\n    this._errored = true;\n\n    const err = new ErrorCtor(\n      prefix ? `Invalid WebSocket frame: ${message}` : message\n    );\n\n    Error.captureStackTrace(err, this.createError);\n    err.code = errorCode;\n    err[kStatusCode] = statusCode;\n    return err;\n  }\n}\n\nmodule.exports = Receiver;\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex\" }] */\n\n'use strict';\n\nconst { Duplex } = require('stream');\nconst { randomFillSync } = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst { EMPTY_BUFFER, kWebSocket, NOOP } = require('./constants');\nconst { isBlob, isValidStatusCode } = require('./validation');\nconst { mask: applyMask, toBuffer } = require('./buffer-util');\n\nconst kByteLength = Symbol('kByteLength');\nconst maskBuffer = Buffer.alloc(4);\nconst RANDOM_POOL_SIZE = 8 * 1024;\nlet randomPool;\nlet randomPoolPointer = RANDOM_POOL_SIZE;\n\nconst DEFAULT = 0;\nconst DEFLATING = 1;\nconst GET_BLOB_DATA = 2;\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {Duplex} socket The connection socket\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   * @param {Function} [generateMask] The function used to generate the masking\n   *     key\n   */\n  constructor(socket, extensions, generateMask) {\n    this._extensions = extensions || {};\n\n    if (generateMask) {\n      this._generateMask = generateMask;\n      this._maskBuffer = Buffer.alloc(4);\n    }\n\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._queue = [];\n    this._state = DEFAULT;\n    this.onerror = NOOP;\n    this[kWebSocket] = undefined;\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {(Buffer|String)} data The data to frame\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @return {(Buffer|String)[]} The framed data\n   * @public\n   */\n  static frame(data, options) {\n    let mask;\n    let merge = false;\n    let offset = 2;\n    let skipMasking = false;\n\n    if (options.mask) {\n      mask = options.maskBuffer || maskBuffer;\n\n      if (options.generateMask) {\n        options.generateMask(mask);\n      } else {\n        if (randomPoolPointer === RANDOM_POOL_SIZE) {\n          /* istanbul ignore else  */\n          if (randomPool === undefined) {\n            //\n            // This is lazily initialized because server-sent frames must not\n            // be masked so it may never be used.\n            //\n            randomPool = Buffer.alloc(RANDOM_POOL_SIZE);\n          }\n\n          randomFillSync(randomPool, 0, RANDOM_POOL_SIZE);\n          randomPoolPointer = 0;\n        }\n\n        mask[0] = randomPool[randomPoolPointer++];\n        mask[1] = randomPool[randomPoolPointer++];\n        mask[2] = randomPool[randomPoolPointer++];\n        mask[3] = randomPool[randomPoolPointer++];\n      }\n\n      skipMasking = (mask[0] | mask[1] | mask[2] | mask[3]) === 0;\n      offset = 6;\n    }\n\n    let dataLength;\n\n    if (typeof data === 'string') {\n      if (\n        (!options.mask || skipMasking) &&\n        options[kByteLength] !== undefined\n      ) {\n        dataLength = options[kByteLength];\n      } else {\n        data = Buffer.from(data);\n        dataLength = data.length;\n      }\n    } else {\n      dataLength = data.length;\n      merge = options.mask && options.readOnly && !skipMasking;\n    }\n\n    let payloadLength = dataLength;\n\n    if (dataLength >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (dataLength > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? dataLength + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    target[1] = payloadLength;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(dataLength, 2);\n    } else if (payloadLength === 127) {\n      target[2] = target[3] = 0;\n      target.writeUIntBE(dataLength, 4, 6);\n    }\n\n    if (!options.mask) return [target, data];\n\n    target[1] |= 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (skipMasking) return [target, data];\n\n    if (merge) {\n      applyMask(data, mask, target, offset, dataLength);\n      return [target];\n    }\n\n    applyMask(data, mask, data, 0, dataLength);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {Number} [code] The status code component of the body\n   * @param {(String|Buffer)} [data] The message component of the body\n   * @param {Boolean} [mask=false] Specifies whether or not to mask the message\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  close(code, data, mask, cb) {\n    let buf;\n\n    if (code === undefined) {\n      buf = EMPTY_BUFFER;\n    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || !data.length) {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      const length = Buffer.byteLength(data);\n\n      if (length > 123) {\n        throw new RangeError('The message must not be greater than 123 bytes');\n      }\n\n      buf = Buffer.allocUnsafe(2 + length);\n      buf.writeUInt16BE(code, 0);\n\n      if (typeof data === 'string') {\n        buf.write(data, 2);\n      } else {\n        buf.set(data, 2);\n      }\n    }\n\n    const options = {\n      [kByteLength]: buf.length,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x08,\n      readOnly: false,\n      rsv1: false\n    };\n\n    if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, buf, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(buf, options), cb);\n    }\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  ping(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x09,\n      readOnly,\n      rsv1: false\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, false, options, cb]);\n      } else {\n        this.getBlobData(data, false, options, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  pong(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x0a,\n      readOnly,\n      rsv1: false\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, false, options, cb]);\n      } else {\n        this.getBlobData(data, false, options, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary\n   *     or text\n   * @param {Boolean} [options.compress=false] Specifies whether or not to\n   *     compress `data`\n   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  send(data, options, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n    let opcode = options.binary ? 2 : 1;\n    let rsv1 = options.compress;\n\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (\n        rsv1 &&\n        perMessageDeflate &&\n        perMessageDeflate.params[\n          perMessageDeflate._isServer\n            ? 'server_no_context_takeover'\n            : 'client_no_context_takeover'\n        ]\n      ) {\n        rsv1 = byteLength >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    const opts = {\n      [kByteLength]: byteLength,\n      fin: options.fin,\n      generateMask: this._generateMask,\n      mask: options.mask,\n      maskBuffer: this._maskBuffer,\n      opcode,\n      readOnly,\n      rsv1\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, this._compress, opts, cb]);\n      } else {\n        this.getBlobData(data, this._compress, opts, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n    } else {\n      this.dispatch(data, this._compress, opts, cb);\n    }\n  }\n\n  /**\n   * Gets the contents of a blob as binary data.\n   *\n   * @param {Blob} blob The blob\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     the data\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  getBlobData(blob, compress, options, cb) {\n    this._bufferedBytes += options[kByteLength];\n    this._state = GET_BLOB_DATA;\n\n    blob\n      .arrayBuffer()\n      .then((arrayBuffer) => {\n        if (this._socket.destroyed) {\n          const err = new Error(\n            'The socket was closed while the blob was being read'\n          );\n\n          //\n          // `callCallbacks` is called in the next tick to ensure that errors\n          // that might be thrown in the callbacks behave like errors thrown\n          // outside the promise chain.\n          //\n          process.nextTick(callCallbacks, this, err, cb);\n          return;\n        }\n\n        this._bufferedBytes -= options[kByteLength];\n        const data = toBuffer(arrayBuffer);\n\n        if (!compress) {\n          this._state = DEFAULT;\n          this.sendFrame(Sender.frame(data, options), cb);\n          this.dequeue();\n        } else {\n          this.dispatch(data, compress, options, cb);\n        }\n      })\n      .catch((err) => {\n        //\n        // `onError` is called in the next tick for the same reason that\n        // `callCallbacks` above is.\n        //\n        process.nextTick(onError, this, err, cb);\n      });\n  }\n\n  /**\n   * Dispatches a message.\n   *\n   * @param {(Buffer|String)} data The message to send\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     `data`\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  dispatch(data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._bufferedBytes += options[kByteLength];\n    this._state = DEFLATING;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      if (this._socket.destroyed) {\n        const err = new Error(\n          'The socket was closed while data was being compressed'\n        );\n\n        callCallbacks(this, err, cb);\n        return;\n      }\n\n      this._bufferedBytes -= options[kByteLength];\n      this._state = DEFAULT;\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue() {\n    while (this._state === DEFAULT && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[3][kByteLength];\n      Reflect.apply(params[0], this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue(params) {\n    this._bufferedBytes += params[3][kByteLength];\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {Buffer[]} list The frame to send\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  sendFrame(list, cb) {\n    if (list.length === 2) {\n      this._socket.cork();\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n      this._socket.uncork();\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n\n/**\n * Calls queued callbacks with an error.\n *\n * @param {Sender} sender The `Sender` instance\n * @param {Error} err The error to call the callbacks with\n * @param {Function} [cb] The first callback\n * @private\n */\nfunction callCallbacks(sender, err, cb) {\n  if (typeof cb === 'function') cb(err);\n\n  for (let i = 0; i < sender._queue.length; i++) {\n    const params = sender._queue[i];\n    const callback = params[params.length - 1];\n\n    if (typeof callback === 'function') callback(err);\n  }\n}\n\n/**\n * Handles a `Sender` error.\n *\n * @param {Sender} sender The `Sender` instance\n * @param {Error} err The error\n * @param {Function} [cb] The first pending callback\n * @private\n */\nfunction onError(sender, err, cb) {\n  callCallbacks(sender, err, cb);\n  sender.onerror(err);\n}\n","'use strict';\n\nconst { Duplex } = require('stream');\n\n/**\n * Emits the `'close'` event on a stream.\n *\n * @param {Duplex} stream The stream.\n * @private\n */\nfunction emitClose(stream) {\n  stream.emit('close');\n}\n\n/**\n * The listener of the `'end'` event.\n *\n * @private\n */\nfunction duplexOnEnd() {\n  if (!this.destroyed && this._writableState.finished) {\n    this.destroy();\n  }\n}\n\n/**\n * The listener of the `'error'` event.\n *\n * @param {Error} err The error\n * @private\n */\nfunction duplexOnError(err) {\n  this.removeListener('error', duplexOnError);\n  this.destroy();\n  if (this.listenerCount('error') === 0) {\n    // Do not suppress the throwing behavior.\n    this.emit('error', err);\n  }\n}\n\n/**\n * Wraps a `WebSocket` in a duplex stream.\n *\n * @param {WebSocket} ws The `WebSocket` to wrap\n * @param {Object} [options] The options for the `Duplex` constructor\n * @return {Duplex} The duplex stream\n * @public\n */\nfunction createWebSocketStream(ws, options) {\n  let terminateOnDestroy = true;\n\n  const duplex = new Duplex({\n    ...options,\n    autoDestroy: false,\n    emitClose: false,\n    objectMode: false,\n    writableObjectMode: false\n  });\n\n  ws.on('message', function message(msg, isBinary) {\n    const data =\n      !isBinary && duplex._readableState.objectMode ? msg.toString() : msg;\n\n    if (!duplex.push(data)) ws.pause();\n  });\n\n  ws.once('error', function error(err) {\n    if (duplex.destroyed) return;\n\n    // Prevent `ws.terminate()` from being called by `duplex._destroy()`.\n    //\n    // - If the `'error'` event is emitted before the `'open'` event, then\n    //   `ws.terminate()` is a noop as no socket is assigned.\n    // - Otherwise, the error is re-emitted by the listener of the `'error'`\n    //   event of the `Receiver` object. The listener already closes the\n    //   connection by calling `ws.close()`. This allows a close frame to be\n    //   sent to the other peer. If `ws.terminate()` is called right after this,\n    //   then the close frame might not be sent.\n    terminateOnDestroy = false;\n    duplex.destroy(err);\n  });\n\n  ws.once('close', function close() {\n    if (duplex.destroyed) return;\n\n    duplex.push(null);\n  });\n\n  duplex._destroy = function (err, callback) {\n    if (ws.readyState === ws.CLOSED) {\n      callback(err);\n      process.nextTick(emitClose, duplex);\n      return;\n    }\n\n    let called = false;\n\n    ws.once('error', function error(err) {\n      called = true;\n      callback(err);\n    });\n\n    ws.once('close', function close() {\n      if (!called) callback(err);\n      process.nextTick(emitClose, duplex);\n    });\n\n    if (terminateOnDestroy) ws.terminate();\n  };\n\n  duplex._final = function (callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._final(callback);\n      });\n      return;\n    }\n\n    // If the value of the `_socket` property is `null` it means that `ws` is a\n    // client websocket and the handshake failed. In fact, when this happens, a\n    // socket is never assigned to the websocket. Wait for the `'error'` event\n    // that will be emitted by the websocket.\n    if (ws._socket === null) return;\n\n    if (ws._socket._writableState.finished) {\n      callback();\n      if (duplex._readableState.endEmitted) duplex.destroy();\n    } else {\n      ws._socket.once('finish', function finish() {\n        // `duplex` is not destroyed here because the `'end'` event will be\n        // emitted on `duplex` after this `'finish'` event. The EOF signaling\n        // `null` chunk is, in fact, pushed when the websocket emits `'close'`.\n        callback();\n      });\n      ws.close();\n    }\n  };\n\n  duplex._read = function () {\n    if (ws.isPaused) ws.resume();\n  };\n\n  duplex._write = function (chunk, encoding, callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._write(chunk, encoding, callback);\n      });\n      return;\n    }\n\n    ws.send(chunk, callback);\n  };\n\n  duplex.on('end', duplexOnEnd);\n  duplex.on('error', duplexOnError);\n  return duplex;\n}\n\nmodule.exports = createWebSocketStream;\n","'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Parses the `Sec-WebSocket-Protocol` header into a set of subprotocol names.\n *\n * @param {String} header The field value of the header\n * @return {Set} The subprotocol names\n * @public\n */\nfunction parse(header) {\n  const protocols = new Set();\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (i; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (end === -1 && tokenChars[code] === 1) {\n      if (start === -1) start = i;\n    } else if (\n      i !== 0 &&\n      (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n    ) {\n      if (end === -1 && start !== -1) end = i;\n    } else if (code === 0x2c /* ',' */) {\n      if (start === -1) {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n\n      if (end === -1) end = i;\n\n      const protocol = header.slice(start, end);\n\n      if (protocols.has(protocol)) {\n        throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n      }\n\n      protocols.add(protocol);\n      start = end = -1;\n    } else {\n      throw new SyntaxError(`Unexpected character at index ${i}`);\n    }\n  }\n\n  if (start === -1 || end !== -1) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  const protocol = header.slice(start, i);\n\n  if (protocols.has(protocol)) {\n    throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n  }\n\n  protocols.add(protocol);\n  return protocols;\n}\n\nmodule.exports = { parse };\n","'use strict';\n\nconst { isUtf8 } = require('buffer');\n\nconst { hasBlob } = require('./constants');\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nfunction isValidStatusCode(code) {\n  return (\n    (code >= 1000 &&\n      code <= 1014 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n}\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction _isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0) {\n      // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {\n      // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0 // Overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {\n      // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80) || // Overlong\n        (buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0) // Surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {\n      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80) || // Overlong\n        (buf[i] === 0xf4 && buf[i + 1] > 0x8f) ||\n        buf[i] > 0xf4 // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Determines whether a value is a `Blob`.\n *\n * @param {*} value The value to be tested\n * @return {Boolean} `true` if `value` is a `Blob`, else `false`\n * @private\n */\nfunction isBlob(value) {\n  return (\n    hasBlob &&\n    typeof value === 'object' &&\n    typeof value.arrayBuffer === 'function' &&\n    typeof value.type === 'string' &&\n    typeof value.stream === 'function' &&\n    (value[Symbol.toStringTag] === 'Blob' ||\n      value[Symbol.toStringTag] === 'File')\n  );\n}\n\nmodule.exports = {\n  isBlob,\n  isValidStatusCode,\n  isValidUTF8: _isValidUTF8,\n  tokenChars\n};\n\nif (isUtf8) {\n  module.exports.isValidUTF8 = function (buf) {\n    return buf.length < 24 ? _isValidUTF8(buf) : isUtf8(buf);\n  };\n} /* istanbul ignore else  */ else if (!process.env.WS_NO_UTF_8_VALIDATE) {\n  try {\n    const isValidUTF8 = require('utf-8-validate');\n\n    module.exports.isValidUTF8 = function (buf) {\n      return buf.length < 32 ? _isValidUTF8(buf) : isValidUTF8(buf);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex$\", \"caughtErrors\": \"none\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst http = require('http');\nconst { Duplex } = require('stream');\nconst { createHash } = require('crypto');\n\nconst extension = require('./extension');\nconst PerMessageDeflate = require('./permessage-deflate');\nconst subprotocol = require('./subprotocol');\nconst WebSocket = require('./websocket');\nconst { GUID, kWebSocket } = require('./constants');\n\nconst keyRegex = /^[+/0-9A-Za-z]{22}==$/;\n\nconst RUNNING = 0;\nconst CLOSING = 1;\nconst CLOSED = 2;\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {Boolean} [options.autoPong=true] Specifies whether or not to\n   *     automatically send a pong in response to a ping\n   * @param {Number} [options.backlog=511] The maximum length of the queue of\n   *     pending connections\n   * @param {Boolean} [options.clientTracking=true] Specifies whether or not to\n   *     track clients\n   * @param {Function} [options.handleProtocols] A hook to handle protocols\n   * @param {String} [options.host] The hostname where to bind the server\n   * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n   *     size\n   * @param {Boolean} [options.noServer=false] Enable no server mode\n   * @param {String} [options.path] Accept only connections matching this path\n   * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable\n   *     permessage-deflate\n   * @param {Number} [options.port] The port where to bind the server\n   * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S\n   *     server to use\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @param {Function} [options.verifyClient] A hook to reject connections\n   * @param {Function} [options.WebSocket=WebSocket] Specifies the `WebSocket`\n   *     class to use. It must be the `WebSocket` class or class that extends it\n   * @param {Function} [callback] A listener for the `listening` event\n   */\n  constructor(options, callback) {\n    super();\n\n    options = {\n      allowSynchronousEvents: true,\n      autoPong: true,\n      maxPayload: 100 * 1024 * 1024,\n      skipUTF8Validation: false,\n      perMessageDeflate: false,\n      handleProtocols: null,\n      clientTracking: true,\n      verifyClient: null,\n      noServer: false,\n      backlog: null, // use default (511 as implemented in net.js)\n      server: null,\n      host: null,\n      path: null,\n      port: null,\n      WebSocket,\n      ...options\n    };\n\n    if (\n      (options.port == null && !options.server && !options.noServer) ||\n      (options.port != null && (options.server || options.noServer)) ||\n      (options.server && options.noServer)\n    ) {\n      throw new TypeError(\n        'One and only one of the \"port\", \"server\", or \"noServer\" options ' +\n          'must be specified'\n      );\n    }\n\n    if (options.port != null) {\n      this._server = http.createServer((req, res) => {\n        const body = http.STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(\n        options.port,\n        options.host,\n        options.backlog,\n        callback\n      );\n    } else if (options.server) {\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      const emitConnection = this.emit.bind(this, 'connection');\n\n      this._removeListeners = addListeners(this._server, {\n        listening: this.emit.bind(this, 'listening'),\n        error: this.emit.bind(this, 'error'),\n        upgrade: (req, socket, head) => {\n          this.handleUpgrade(req, socket, head, emitConnection);\n        }\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) {\n      this.clients = new Set();\n      this._shouldEmitClose = false;\n    }\n\n    this.options = options;\n    this._state = RUNNING;\n  }\n\n  /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */\n  address() {\n    if (this.options.noServer) {\n      throw new Error('The server is operating in \"noServer\" mode');\n    }\n\n    if (!this._server) return null;\n    return this._server.address();\n  }\n\n  /**\n   * Stop the server from accepting new connections and emit the `'close'` event\n   * when all existing connections are closed.\n   *\n   * @param {Function} [cb] A one-time listener for the `'close'` event\n   * @public\n   */\n  close(cb) {\n    if (this._state === CLOSED) {\n      if (cb) {\n        this.once('close', () => {\n          cb(new Error('The server is not running'));\n        });\n      }\n\n      process.nextTick(emitClose, this);\n      return;\n    }\n\n    if (cb) this.once('close', cb);\n\n    if (this._state === CLOSING) return;\n    this._state = CLOSING;\n\n    if (this.options.noServer || this.options.server) {\n      if (this._server) {\n        this._removeListeners();\n        this._removeListeners = this._server = null;\n      }\n\n      if (this.clients) {\n        if (!this.clients.size) {\n          process.nextTick(emitClose, this);\n        } else {\n          this._shouldEmitClose = true;\n        }\n      } else {\n        process.nextTick(emitClose, this);\n      }\n    } else {\n      const server = this._server;\n\n      this._removeListeners();\n      this._removeListeners = this._server = null;\n\n      //\n      // The HTTP/S server was created internally. Close it, and rely on its\n      // `'close'` event.\n      //\n      server.close(() => {\n        emitClose(this);\n      });\n    }\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle(req) {\n    if (this.options.path) {\n      const index = req.url.indexOf('?');\n      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n\n      if (pathname !== this.options.path) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade(req, socket, head, cb) {\n    socket.on('error', socketOnError);\n\n    const key = req.headers['sec-websocket-key'];\n    const upgrade = req.headers.upgrade;\n    const version = +req.headers['sec-websocket-version'];\n\n    if (req.method !== 'GET') {\n      const message = 'Invalid HTTP method';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 405, message);\n      return;\n    }\n\n    if (upgrade === undefined || upgrade.toLowerCase() !== 'websocket') {\n      const message = 'Invalid Upgrade header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (key === undefined || !keyRegex.test(key)) {\n      const message = 'Missing or invalid Sec-WebSocket-Key header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (version !== 8 && version !== 13) {\n      const message = 'Missing or invalid Sec-WebSocket-Version header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (!this.shouldHandle(req)) {\n      abortHandshake(socket, 400);\n      return;\n    }\n\n    const secWebSocketProtocol = req.headers['sec-websocket-protocol'];\n    let protocols = new Set();\n\n    if (secWebSocketProtocol !== undefined) {\n      try {\n        protocols = subprotocol.parse(secWebSocketProtocol);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Protocol header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    const secWebSocketExtensions = req.headers['sec-websocket-extensions'];\n    const extensions = {};\n\n    if (\n      this.options.perMessageDeflate &&\n      secWebSocketExtensions !== undefined\n    ) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = extension.parse(secWebSocketExtensions);\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        const message =\n          'Invalid or unacceptable Sec-WebSocket-Extensions header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin:\n          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.socket.authorized || req.socket.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message, headers) => {\n          if (!verified) {\n            return abortHandshake(socket, code || 401, message, headers);\n          }\n\n          this.completeUpgrade(\n            extensions,\n            key,\n            protocols,\n            req,\n            socket,\n            head,\n            cb\n          );\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n    }\n\n    this.completeUpgrade(extensions, key, protocols, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {Object} extensions The accepted extensions\n   * @param {String} key The value of the `Sec-WebSocket-Key` header\n   * @param {Set} protocols The subprotocols\n   * @param {http.IncomingMessage} req The request object\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @throws {Error} If called more than once with the same socket\n   * @private\n   */\n  completeUpgrade(extensions, key, protocols, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    if (socket[kWebSocket]) {\n      throw new Error(\n        'server.handleUpgrade() was called more than once with the same ' +\n          'socket, possibly due to a misconfiguration'\n      );\n    }\n\n    if (this._state > RUNNING) return abortHandshake(socket, 503);\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${digest}`\n    ];\n\n    const ws = new this.options.WebSocket(null, undefined, this.options);\n\n    if (protocols.size) {\n      //\n      // Optionally call external protocol selection handler.\n      //\n      const protocol = this.options.handleProtocols\n        ? this.options.handleProtocols(protocols, req)\n        : protocols.values().next().value;\n\n      if (protocol) {\n        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n        ws._protocol = protocol;\n      }\n    }\n\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = extension.format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n      ws._extensions = extensions;\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n    socket.removeListener('error', socketOnError);\n\n    ws.setSocket(socket, head, {\n      allowSynchronousEvents: this.options.allowSynchronousEvents,\n      maxPayload: this.options.maxPayload,\n      skipUTF8Validation: this.options.skipUTF8Validation\n    });\n\n    if (this.clients) {\n      this.clients.add(ws);\n      ws.on('close', () => {\n        this.clients.delete(ws);\n\n        if (this._shouldEmitClose && !this.clients.size) {\n          process.nextTick(emitClose, this);\n        }\n      });\n    }\n\n    cb(ws, req);\n  }\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when\n *     called\n * @private\n */\nfunction addListeners(server, map) {\n  for (const event of Object.keys(map)) server.on(event, map[event]);\n\n  return function removeListeners() {\n    for (const event of Object.keys(map)) {\n      server.removeListener(event, map[event]);\n    }\n  };\n}\n\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */\nfunction emitClose(server) {\n  server._state = CLOSED;\n  server.emit('close');\n}\n\n/**\n * Handle socket errors.\n *\n * @private\n */\nfunction socketOnError() {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {Duplex} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */\nfunction abortHandshake(socket, code, message, headers) {\n  //\n  // The socket is writable unless the user destroyed or ended it before calling\n  // `server.handleUpgrade()` or in the `verifyClient` function, which is a user\n  // error. Handling this does not make much sense as the worst that can happen\n  // is that some of the data written by the user might be discarded due to the\n  // call to `socket.end()` below, which triggers an `'error'` event that in\n  // turn causes the socket to be destroyed.\n  //\n  message = message || http.STATUS_CODES[code];\n  headers = {\n    Connection: 'close',\n    'Content-Type': 'text/html',\n    'Content-Length': Buffer.byteLength(message),\n    ...headers\n  };\n\n  socket.once('finish', socket.destroy);\n\n  socket.end(\n    `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` +\n      Object.keys(headers)\n        .map((h) => `${h}: ${headers[h]}`)\n        .join('\\r\\n') +\n      '\\r\\n\\r\\n' +\n      message\n  );\n}\n\n/**\n * Emit a `'wsClientError'` event on a `WebSocketServer` if there is at least\n * one listener for it, otherwise call `abortHandshake()`.\n *\n * @param {WebSocketServer} server The WebSocket server\n * @param {http.IncomingMessage} req The request object\n * @param {Duplex} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} message The HTTP response body\n * @private\n */\nfunction abortHandshakeOrEmitwsClientError(server, req, socket, code, message) {\n  if (server.listenerCount('wsClientError')) {\n    const err = new Error(message);\n    Error.captureStackTrace(err, abortHandshakeOrEmitwsClientError);\n\n    server.emit('wsClientError', err, socket, req);\n  } else {\n    abortHandshake(socket, code, message);\n  }\n}\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex|Readable$\", \"caughtErrors\": \"none\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst https = require('https');\nconst http = require('http');\nconst net = require('net');\nconst tls = require('tls');\nconst { randomBytes, createHash } = require('crypto');\nconst { Duplex, Readable } = require('stream');\nconst { URL } = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst Receiver = require('./receiver');\nconst Sender = require('./sender');\nconst { isBlob } = require('./validation');\n\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  GUID,\n  kForOnEventAttribute,\n  kListener,\n  kStatusCode,\n  kWebSocket,\n  NOOP\n} = require('./constants');\nconst {\n  EventTarget: { addEventListener, removeEventListener }\n} = require('./event-target');\nconst { format, parse } = require('./extension');\nconst { toBuffer } = require('./buffer-util');\n\nconst closeTimeout = 30 * 1000;\nconst kAborted = Symbol('kAborted');\nconst protocolVersions = [8, 13];\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst subprotocolRegex = /^[!#$%&'*+\\-.0-9A-Z^_`|a-z~]+$/;\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|URL)} address The URL to which to connect\n   * @param {(String|String[])} [protocols] The subprotocols\n   * @param {Object} [options] Connection options\n   */\n  constructor(address, protocols, options) {\n    super();\n\n    this._binaryType = BINARY_TYPES[0];\n    this._closeCode = 1006;\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = EMPTY_BUFFER;\n    this._closeTimer = null;\n    this._errorEmitted = false;\n    this._extensions = {};\n    this._paused = false;\n    this._protocol = '';\n    this._readyState = WebSocket.CONNECTING;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      this._bufferedAmount = 0;\n      this._isServer = false;\n      this._redirects = 0;\n\n      if (protocols === undefined) {\n        protocols = [];\n      } else if (!Array.isArray(protocols)) {\n        if (typeof protocols === 'object' && protocols !== null) {\n          options = protocols;\n          protocols = [];\n        } else {\n          protocols = [protocols];\n        }\n      }\n\n      initAsClient(this, address, protocols, options);\n    } else {\n      this._autoPong = options.autoPong;\n      this._isServer = true;\n    }\n  }\n\n  /**\n   * For historical reasons, the custom \"nodebuffer\" type is used by the default\n   * instead of \"blob\".\n   *\n   * @type {String}\n   */\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(type) {\n    if (!BINARY_TYPES.includes(type)) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount() {\n    if (!this._socket) return this._bufferedAmount;\n\n    return this._socket._writableState.length + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions() {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get isPaused() {\n    return this._paused;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onclose() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onerror() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onopen() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onmessage() {\n    return null;\n  }\n\n  /**\n   * @type {String}\n   */\n  get protocol() {\n    return this._protocol;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get readyState() {\n    return this._readyState;\n  }\n\n  /**\n   * @type {String}\n   */\n  get url() {\n    return this._url;\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Object} options Options object\n   * @param {Boolean} [options.allowSynchronousEvents=false] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Number} [options.maxPayload=0] The maximum allowed message size\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @private\n   */\n  setSocket(socket, head, options) {\n    const receiver = new Receiver({\n      allowSynchronousEvents: options.allowSynchronousEvents,\n      binaryType: this.binaryType,\n      extensions: this._extensions,\n      isServer: this._isServer,\n      maxPayload: options.maxPayload,\n      skipUTF8Validation: options.skipUTF8Validation\n    });\n\n    const sender = new Sender(socket, this._extensions, options.generateMask);\n\n    this._receiver = receiver;\n    this._sender = sender;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    sender[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    sender.onerror = senderOnError;\n\n    //\n    // These methods may not be available if `socket` is just a `Duplex`.\n    //\n    if (socket.setTimeout) socket.setTimeout(0);\n    if (socket.setNoDelay) socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this._readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose() {\n    if (!this._socket) {\n      this._readyState = WebSocket.CLOSED;\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this._readyState = WebSocket.CLOSED;\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} [code] Status code explaining why the connection is closing\n   * @param {(String|Buffer)} [data] The reason why the connection is\n   *     closing\n   * @public\n   */\n  close(code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (\n        this._closeFrameSent &&\n        (this._closeFrameReceived || this._receiver._writableState.errorEmitted)\n      ) {\n        this._socket.end();\n      }\n\n      return;\n    }\n\n    this._readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (\n        this._closeFrameReceived ||\n        this._receiver._writableState.errorEmitted\n      ) {\n        this._socket.end();\n      }\n    });\n\n    setCloseTimer(this);\n  }\n\n  /**\n   * Pause the socket.\n   *\n   * @public\n   */\n  pause() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = true;\n    this._socket.pause();\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the ping is sent\n   * @public\n   */\n  ping(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the pong is sent\n   * @public\n   */\n  pong(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Resume the socket.\n   *\n   * @public\n   */\n  resume() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = false;\n    if (!this._receiver._writableState.needDrain) this._socket.resume();\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.binary] Specifies whether `data` is binary or\n   *     text\n   * @param {Boolean} [options.compress] Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when data is written out\n   * @public\n   */\n  send(data, options, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    const opts = {\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true,\n      ...options\n    };\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate() {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this._socket) {\n      this._readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n[\n  'binaryType',\n  'bufferedAmount',\n  'extensions',\n  'isPaused',\n  'protocol',\n  'readyState',\n  'url'\n].forEach((property) => {\n  Object.defineProperty(WebSocket.prototype, property, { enumerable: true });\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    enumerable: true,\n    get() {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) return listener[kListener];\n      }\n\n      return null;\n    },\n    set(handler) {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) {\n          this.removeListener(method, listener);\n          break;\n        }\n      }\n\n      if (typeof handler !== 'function') return;\n\n      this.addEventListener(method, handler, {\n        [kForOnEventAttribute]: true\n      });\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = addEventListener;\nWebSocket.prototype.removeEventListener = removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|URL)} address The URL to which to connect\n * @param {Array} protocols The subprotocols\n * @param {Object} [options] Connection options\n * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether any\n *     of the `'message'`, `'ping'`, and `'pong'` events can be emitted multiple\n *     times in the same tick\n * @param {Boolean} [options.autoPong=true] Specifies whether or not to\n *     automatically send a pong in response to a ping\n * @param {Function} [options.finishRequest] A function which can be used to\n *     customize the headers of each http request before it is sent\n * @param {Boolean} [options.followRedirects=false] Whether or not to follow\n *     redirects\n * @param {Function} [options.generateMask] The function used to generate the\n *     masking key\n * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the\n *     handshake request\n * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n *     size\n * @param {Number} [options.maxRedirects=10] The maximum number of redirects\n *     allowed\n * @param {String} [options.origin] Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable\n *     permessage-deflate\n * @param {Number} [options.protocolVersion=13] Value of the\n *     `Sec-WebSocket-Version` header\n * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n *     not to skip UTF-8 validation for text and close messages\n * @private\n */\nfunction initAsClient(websocket, address, protocols, options) {\n  const opts = {\n    allowSynchronousEvents: true,\n    autoPong: true,\n    protocolVersion: protocolVersions[1],\n    maxPayload: 100 * 1024 * 1024,\n    skipUTF8Validation: false,\n    perMessageDeflate: true,\n    followRedirects: false,\n    maxRedirects: 10,\n    ...options,\n    socketPath: undefined,\n    hostname: undefined,\n    protocol: undefined,\n    timeout: undefined,\n    method: 'GET',\n    host: undefined,\n    path: undefined,\n    port: undefined\n  };\n\n  websocket._autoPong = opts.autoPong;\n\n  if (!protocolVersions.includes(opts.protocolVersion)) {\n    throw new RangeError(\n      `Unsupported protocol version: ${opts.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  let parsedUrl;\n\n  if (address instanceof URL) {\n    parsedUrl = address;\n  } else {\n    try {\n      parsedUrl = new URL(address);\n    } catch (e) {\n      throw new SyntaxError(`Invalid URL: ${address}`);\n    }\n  }\n\n  if (parsedUrl.protocol === 'http:') {\n    parsedUrl.protocol = 'ws:';\n  } else if (parsedUrl.protocol === 'https:') {\n    parsedUrl.protocol = 'wss:';\n  }\n\n  websocket._url = parsedUrl.href;\n\n  const isSecure = parsedUrl.protocol === 'wss:';\n  const isIpcUrl = parsedUrl.protocol === 'ws+unix:';\n  let invalidUrlMessage;\n\n  if (parsedUrl.protocol !== 'ws:' && !isSecure && !isIpcUrl) {\n    invalidUrlMessage =\n      'The URL\\'s protocol must be one of \"ws:\", \"wss:\", ' +\n      '\"http:\", \"https\", or \"ws+unix:\"';\n  } else if (isIpcUrl && !parsedUrl.pathname) {\n    invalidUrlMessage = \"The URL's pathname is empty\";\n  } else if (parsedUrl.hash) {\n    invalidUrlMessage = 'The URL contains a fragment identifier';\n  }\n\n  if (invalidUrlMessage) {\n    const err = new SyntaxError(invalidUrlMessage);\n\n    if (websocket._redirects === 0) {\n      throw err;\n    } else {\n      emitErrorAndClose(websocket, err);\n      return;\n    }\n  }\n\n  const defaultPort = isSecure ? 443 : 80;\n  const key = randomBytes(16).toString('base64');\n  const request = isSecure ? https.request : http.request;\n  const protocolSet = new Set();\n  let perMessageDeflate;\n\n  opts.createConnection =\n    opts.createConnection || (isSecure ? tlsConnect : netConnect);\n  opts.defaultPort = opts.defaultPort || defaultPort;\n  opts.port = parsedUrl.port || defaultPort;\n  opts.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  opts.headers = {\n    ...opts.headers,\n    'Sec-WebSocket-Version': opts.protocolVersion,\n    'Sec-WebSocket-Key': key,\n    Connection: 'Upgrade',\n    Upgrade: 'websocket'\n  };\n  opts.path = parsedUrl.pathname + parsedUrl.search;\n  opts.timeout = opts.handshakeTimeout;\n\n  if (opts.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},\n      false,\n      opts.maxPayload\n    );\n    opts.headers['Sec-WebSocket-Extensions'] = format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols.length) {\n    for (const protocol of protocols) {\n      if (\n        typeof protocol !== 'string' ||\n        !subprotocolRegex.test(protocol) ||\n        protocolSet.has(protocol)\n      ) {\n        throw new SyntaxError(\n          'An invalid or duplicated subprotocol was specified'\n        );\n      }\n\n      protocolSet.add(protocol);\n    }\n\n    opts.headers['Sec-WebSocket-Protocol'] = protocols.join(',');\n  }\n  if (opts.origin) {\n    if (opts.protocolVersion < 13) {\n      opts.headers['Sec-WebSocket-Origin'] = opts.origin;\n    } else {\n      opts.headers.Origin = opts.origin;\n    }\n  }\n  if (parsedUrl.username || parsedUrl.password) {\n    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isIpcUrl) {\n    const parts = opts.path.split(':');\n\n    opts.socketPath = parts[0];\n    opts.path = parts[1];\n  }\n\n  let req;\n\n  if (opts.followRedirects) {\n    if (websocket._redirects === 0) {\n      websocket._originalIpc = isIpcUrl;\n      websocket._originalSecure = isSecure;\n      websocket._originalHostOrSocketPath = isIpcUrl\n        ? opts.socketPath\n        : parsedUrl.host;\n\n      const headers = options && options.headers;\n\n      //\n      // Shallow copy the user provided options so that headers can be changed\n      // without mutating the original object.\n      //\n      options = { ...options, headers: {} };\n\n      if (headers) {\n        for (const [key, value] of Object.entries(headers)) {\n          options.headers[key.toLowerCase()] = value;\n        }\n      }\n    } else if (websocket.listenerCount('redirect') === 0) {\n      const isSameHost = isIpcUrl\n        ? websocket._originalIpc\n          ? opts.socketPath === websocket._originalHostOrSocketPath\n          : false\n        : websocket._originalIpc\n          ? false\n          : parsedUrl.host === websocket._originalHostOrSocketPath;\n\n      if (!isSameHost || (websocket._originalSecure && !isSecure)) {\n        //\n        // Match curl 7.77.0 behavior and drop the following headers. These\n        // headers are also dropped when following a redirect to a subdomain.\n        //\n        delete opts.headers.authorization;\n        delete opts.headers.cookie;\n\n        if (!isSameHost) delete opts.headers.host;\n\n        opts.auth = undefined;\n      }\n    }\n\n    //\n    // Match curl 7.77.0 behavior and make the first `Authorization` header win.\n    // If the `Authorization` header is set, then there is nothing to do as it\n    // will take precedence.\n    //\n    if (opts.auth && !options.headers.authorization) {\n      options.headers.authorization =\n        'Basic ' + Buffer.from(opts.auth).toString('base64');\n    }\n\n    req = websocket._req = request(opts);\n\n    if (websocket._redirects) {\n      //\n      // Unlike what is done for the `'upgrade'` event, no early exit is\n      // triggered here if the user calls `websocket.close()` or\n      // `websocket.terminate()` from a listener of the `'redirect'` event. This\n      // is because the user can also call `request.destroy()` with an error\n      // before calling `websocket.close()` or `websocket.terminate()` and this\n      // would result in an error being emitted on the `request` object with no\n      // `'error'` event listeners attached.\n      //\n      websocket.emit('redirect', websocket.url, req);\n    }\n  } else {\n    req = websocket._req = request(opts);\n  }\n\n  if (opts.timeout) {\n    req.on('timeout', () => {\n      abortHandshake(websocket, req, 'Opening handshake has timed out');\n    });\n  }\n\n  req.on('error', (err) => {\n    if (req === null || req[kAborted]) return;\n\n    req = websocket._req = null;\n    emitErrorAndClose(websocket, err);\n  });\n\n  req.on('response', (res) => {\n    const location = res.headers.location;\n    const statusCode = res.statusCode;\n\n    if (\n      location &&\n      opts.followRedirects &&\n      statusCode >= 300 &&\n      statusCode < 400\n    ) {\n      if (++websocket._redirects > opts.maxRedirects) {\n        abortHandshake(websocket, req, 'Maximum redirects exceeded');\n        return;\n      }\n\n      req.abort();\n\n      let addr;\n\n      try {\n        addr = new URL(location, address);\n      } catch (e) {\n        const err = new SyntaxError(`Invalid URL: ${location}`);\n        emitErrorAndClose(websocket, err);\n        return;\n      }\n\n      initAsClient(websocket, addr, protocols, options);\n    } else if (!websocket.emit('unexpected-response', req, res)) {\n      abortHandshake(\n        websocket,\n        req,\n        `Unexpected server response: ${res.statusCode}`\n      );\n    }\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    websocket.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the\n    // `'upgrade'` event.\n    //\n    if (websocket.readyState !== WebSocket.CONNECTING) return;\n\n    req = websocket._req = null;\n\n    const upgrade = res.headers.upgrade;\n\n    if (upgrade === undefined || upgrade.toLowerCase() !== 'websocket') {\n      abortHandshake(websocket, socket, 'Invalid Upgrade header');\n      return;\n    }\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    let protError;\n\n    if (serverProt !== undefined) {\n      if (!protocolSet.size) {\n        protError = 'Server sent a subprotocol but none was requested';\n      } else if (!protocolSet.has(serverProt)) {\n        protError = 'Server sent an invalid subprotocol';\n      }\n    } else if (protocolSet.size) {\n      protError = 'Server sent no subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(websocket, socket, protError);\n      return;\n    }\n\n    if (serverProt) websocket._protocol = serverProt;\n\n    const secWebSocketExtensions = res.headers['sec-websocket-extensions'];\n\n    if (secWebSocketExtensions !== undefined) {\n      if (!perMessageDeflate) {\n        const message =\n          'Server sent a Sec-WebSocket-Extensions header but no extension ' +\n          'was requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      let extensions;\n\n      try {\n        extensions = parse(secWebSocketExtensions);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      const extensionNames = Object.keys(extensions);\n\n      if (\n        extensionNames.length !== 1 ||\n        extensionNames[0] !== PerMessageDeflate.extensionName\n      ) {\n        const message = 'Server indicated an extension that was not requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      try {\n        perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      websocket._extensions[PerMessageDeflate.extensionName] =\n        perMessageDeflate;\n    }\n\n    websocket.setSocket(socket, head, {\n      allowSynchronousEvents: opts.allowSynchronousEvents,\n      generateMask: opts.generateMask,\n      maxPayload: opts.maxPayload,\n      skipUTF8Validation: opts.skipUTF8Validation\n    });\n  });\n\n  if (opts.finishRequest) {\n    opts.finishRequest(req, websocket);\n  } else {\n    req.end();\n  }\n}\n\n/**\n * Emit the `'error'` and `'close'` events.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {Error} The error to emit\n * @private\n */\nfunction emitErrorAndClose(websocket, err) {\n  websocket._readyState = WebSocket.CLOSING;\n  //\n  // The following assignment is practically useless and is done only for\n  // consistency.\n  //\n  websocket._errorEmitted = true;\n  websocket.emit('error', err);\n  websocket.emitClose();\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect(options) {\n  options.path = options.socketPath;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect(options) {\n  options.path = undefined;\n\n  if (!options.servername && options.servername !== '') {\n    options.servername = net.isIP(options.host) ? '' : options.host;\n  }\n\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to\n *     abort or the socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake(websocket, stream, message) {\n  websocket._readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream[kAborted] = true;\n    stream.abort();\n\n    if (stream.socket && !stream.socket.destroyed) {\n      //\n      // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if\n      // called after the request completed. See\n      // https://github.com/websockets/ws/issues/1869.\n      //\n      stream.socket.destroy();\n    }\n\n    process.nextTick(emitErrorAndClose, websocket, err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} [data] The data to send\n * @param {Function} [cb] Callback\n * @private\n */\nfunction sendAfterClose(websocket, data, cb) {\n  if (data) {\n    const length = isBlob(data) ? data.size : toBuffer(data).length;\n\n    //\n    // The `_bufferedAmount` property is used only when the peer is a client and\n    // the opening handshake fails. Under these circumstances, in fact, the\n    // `setSocket()` method is not called, so the `_socket` and `_sender`\n    // properties are set to `null`.\n    //\n    if (websocket._socket) websocket._sender._bufferedBytes += length;\n    else websocket._bufferedAmount += length;\n  }\n\n  if (cb) {\n    const err = new Error(\n      `WebSocket is not open: readyState ${websocket.readyState} ` +\n        `(${readyStates[websocket.readyState]})`\n    );\n    process.nextTick(cb, err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {Buffer} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude(code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (websocket._socket[kWebSocket] === undefined) return;\n\n  websocket._socket.removeListener('data', socketOnData);\n  process.nextTick(resume, websocket._socket);\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain() {\n  const websocket = this[kWebSocket];\n\n  if (!websocket.isPaused) websocket._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._socket[kWebSocket] !== undefined) {\n    websocket._socket.removeListener('data', socketOnData);\n\n    //\n    // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See\n    // https://github.com/websockets/ws/issues/1940.\n    //\n    process.nextTick(resume, websocket._socket);\n\n    websocket.close(err[kStatusCode]);\n  }\n\n  if (!websocket._errorEmitted) {\n    websocket._errorEmitted = true;\n    websocket.emit('error', err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish() {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {Buffer|ArrayBuffer|Buffer[])} data The message\n * @param {Boolean} isBinary Specifies whether the message is binary or not\n * @private\n */\nfunction receiverOnMessage(data, isBinary) {\n  this[kWebSocket].emit('message', data, isBinary);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing(data) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._autoPong) websocket.pong(data, !this._isServer, NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong(data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * Resume a readable stream\n *\n * @param {Readable} stream The readable stream\n * @private\n */\nfunction resume(stream) {\n  stream.resume();\n}\n\n/**\n * The `Sender` error event handler.\n *\n * @param {Error} The error\n * @private\n */\nfunction senderOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket.readyState === WebSocket.CLOSED) return;\n  if (websocket.readyState === WebSocket.OPEN) {\n    websocket._readyState = WebSocket.CLOSING;\n    setCloseTimer(websocket);\n  }\n\n  //\n  // `socket.end()` is used instead of `socket.destroy()` to allow the other\n  // peer to finish sending queued data. There is no need to set a timer here\n  // because `CLOSING` means that it is already set or not needed.\n  //\n  this._socket.end();\n\n  if (!websocket._errorEmitted) {\n    websocket._errorEmitted = true;\n    websocket.emit('error', err);\n  }\n}\n\n/**\n * Set a timer to destroy the underlying raw socket of a WebSocket.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @private\n */\nfunction setCloseTimer(websocket) {\n  websocket._closeTimer = setTimeout(\n    websocket._socket.destroy.bind(websocket._socket),\n    closeTimeout\n  );\n}\n\n/**\n * The listener of the socket `'close'` event.\n *\n * @private\n */\nfunction socketOnClose() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('data', socketOnData);\n  this.removeListener('end', socketOnEnd);\n\n  websocket._readyState = WebSocket.CLOSING;\n\n  let chunk;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk.\n  //\n  if (\n    !this._readableState.endEmitted &&\n    !websocket._closeFrameReceived &&\n    !websocket._receiver._writableState.errorEmitted &&\n    (chunk = websocket._socket.read()) !== null\n  ) {\n    websocket._receiver.write(chunk);\n  }\n\n  websocket._receiver.end();\n\n  this[kWebSocket] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the socket `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData(chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the socket `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd() {\n  const websocket = this[kWebSocket];\n\n  websocket._readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the socket `'error'` event.\n *\n * @private\n */\nfunction socketOnError() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', NOOP);\n\n  if (websocket) {\n    websocket._readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n","module.exports = require(\"buffer\");","module.exports = require(\"crypto\");","module.exports = require(\"events\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"net\");","module.exports = require(\"stream\");","module.exports = require(\"tls\");","module.exports = require(\"url\");","module.exports = require(\"zlib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"express\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"cors\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"colors\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"graphql-yoga\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@graphql-tools/load-files\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"graphql\");","import { TokenKind, visit, } from 'graphql';\nconst MAX_LINE_LENGTH = 80;\nlet commentsRegistry = {};\nexport function resetComments() {\n    commentsRegistry = {};\n}\nexport function collectComment(node) {\n    const entityName = node.name?.value;\n    if (entityName == null) {\n        return;\n    }\n    pushComment(node, entityName);\n    switch (node.kind) {\n        case 'EnumTypeDefinition':\n            if (node.values) {\n                for (const value of node.values) {\n                    pushComment(value, entityName, value.name.value);\n                }\n            }\n            break;\n        case 'ObjectTypeDefinition':\n        case 'InputObjectTypeDefinition':\n        case 'InterfaceTypeDefinition':\n            if (node.fields) {\n                for (const field of node.fields) {\n                    pushComment(field, entityName, field.name.value);\n                    if (isFieldDefinitionNode(field) && field.arguments) {\n                        for (const arg of field.arguments) {\n                            pushComment(arg, entityName, field.name.value, arg.name.value);\n                        }\n                    }\n                }\n            }\n            break;\n    }\n}\nexport function pushComment(node, entity, field, argument) {\n    const comment = getComment(node);\n    if (typeof comment !== 'string' || comment.length === 0) {\n        return;\n    }\n    const keys = [entity];\n    if (field) {\n        keys.push(field);\n        if (argument) {\n            keys.push(argument);\n        }\n    }\n    const path = keys.join('.');\n    if (!commentsRegistry[path]) {\n        commentsRegistry[path] = [];\n    }\n    commentsRegistry[path].push(comment);\n}\nexport function printComment(comment) {\n    return '\\n# ' + comment.replace(/\\n/g, '\\n# ');\n}\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/**\n * NOTE: ==> This file has been modified just to add comments to the printed AST\n * This is a temp measure, we will move to using the original non modified printer.js ASAP.\n */\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\nfunction join(maybeArray, separator) {\n    return maybeArray ? maybeArray.filter(x => x).join(separator || '') : '';\n}\nfunction hasMultilineItems(maybeArray) {\n    return maybeArray?.some(str => str.includes('\\n')) ?? false;\n}\nfunction addDescription(cb) {\n    return (node, _key, _parent, path, ancestors) => {\n        const keys = [];\n        const parent = path.reduce((prev, key) => {\n            if (['fields', 'arguments', 'values'].includes(key) && prev.name) {\n                keys.push(prev.name.value);\n            }\n            return prev[key];\n        }, ancestors[0]);\n        const key = [...keys, parent?.name?.value].filter(Boolean).join('.');\n        const items = [];\n        if (node.kind.includes('Definition') && commentsRegistry[key]) {\n            items.push(...commentsRegistry[key]);\n        }\n        return join([...items.map(printComment), node.description, cb(node, _key, _parent, path, ancestors)], '\\n');\n    };\n}\nfunction indent(maybeString) {\n    return maybeString && `  ${maybeString.replace(/\\n/g, '\\n  ')}`;\n}\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\nfunction block(array) {\n    return array && array.length !== 0 ? `{\\n${indent(join(array, '\\n'))}\\n}` : '';\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise\n * print an empty string.\n */\nfunction wrap(start, maybeString, end) {\n    return maybeString ? start + maybeString + (end || '') : '';\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n */\nfunction printBlockString(value, isDescription = false) {\n    const escaped = value.replace(/\"\"\"/g, '\\\\\"\"\"');\n    return (value[0] === ' ' || value[0] === '\\t') && value.indexOf('\\n') === -1\n        ? `\"\"\"${escaped.replace(/\"$/, '\"\\n')}\"\"\"`\n        : `\"\"\"\\n${isDescription ? escaped : indent(escaped)}\\n\"\"\"`;\n}\nconst printDocASTReducer = {\n    Name: { leave: node => node.value },\n    Variable: { leave: node => '$' + node.name },\n    // Document\n    Document: {\n        leave: node => join(node.definitions, '\\n\\n'),\n    },\n    OperationDefinition: {\n        leave: node => {\n            const varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n            const prefix = join([node.operation, join([node.name, varDefs]), join(node.directives, ' ')], ' ');\n            // the query short form.\n            return prefix + ' ' + node.selectionSet;\n        },\n    },\n    VariableDefinition: {\n        leave: ({ variable, type, defaultValue, directives }) => variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' ')),\n    },\n    SelectionSet: { leave: ({ selections }) => block(selections) },\n    Field: {\n        leave({ alias, name, arguments: args, directives, selectionSet }) {\n            const prefix = wrap('', alias, ': ') + name;\n            let argsLine = prefix + wrap('(', join(args, ', '), ')');\n            if (argsLine.length > MAX_LINE_LENGTH) {\n                argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n            }\n            return join([argsLine, join(directives, ' '), selectionSet], ' ');\n        },\n    },\n    Argument: { leave: ({ name, value }) => name + ': ' + value },\n    // Fragments\n    FragmentSpread: {\n        leave: ({ name, directives }) => '...' + name + wrap(' ', join(directives, ' ')),\n    },\n    InlineFragment: {\n        leave: ({ typeCondition, directives, selectionSet }) => join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' '),\n    },\n    FragmentDefinition: {\n        leave: ({ name, typeCondition, variableDefinitions, directives, selectionSet }) => \n        // Note: fragment variable definitions are experimental and may be changed\n        // or removed in the future.\n        `fragment ${name}${wrap('(', join(variableDefinitions, ', '), ')')} ` +\n            `on ${typeCondition} ${wrap('', join(directives, ' '), ' ')}` +\n            selectionSet,\n    },\n    // Value\n    IntValue: { leave: ({ value }) => value },\n    FloatValue: { leave: ({ value }) => value },\n    StringValue: {\n        leave: ({ value, block: isBlockString }) => {\n            if (isBlockString) {\n                return printBlockString(value);\n            }\n            return JSON.stringify(value);\n        },\n    },\n    BooleanValue: { leave: ({ value }) => (value ? 'true' : 'false') },\n    NullValue: { leave: () => 'null' },\n    EnumValue: { leave: ({ value }) => value },\n    ListValue: { leave: ({ values }) => '[' + join(values, ', ') + ']' },\n    ObjectValue: { leave: ({ fields }) => '{' + join(fields, ', ') + '}' },\n    ObjectField: { leave: ({ name, value }) => name + ': ' + value },\n    // Directive\n    Directive: {\n        leave: ({ name, arguments: args }) => '@' + name + wrap('(', join(args, ', '), ')'),\n    },\n    // Type\n    NamedType: { leave: ({ name }) => name },\n    ListType: { leave: ({ type }) => '[' + type + ']' },\n    NonNullType: { leave: ({ type }) => type + '!' },\n    // Type System Definitions\n    SchemaDefinition: {\n        leave: ({ directives, operationTypes }) => join(['schema', join(directives, ' '), block(operationTypes)], ' '),\n    },\n    OperationTypeDefinition: {\n        leave: ({ operation, type }) => operation + ': ' + type,\n    },\n    ScalarTypeDefinition: {\n        leave: ({ name, directives }) => join(['scalar', name, join(directives, ' ')], ' '),\n    },\n    ObjectTypeDefinition: {\n        leave: ({ name, interfaces, directives, fields }) => join([\n            'type',\n            name,\n            wrap('implements ', join(interfaces, ' & ')),\n            join(directives, ' '),\n            block(fields),\n        ], ' '),\n    },\n    FieldDefinition: {\n        leave: ({ name, arguments: args, type, directives }) => name +\n            (hasMultilineItems(args)\n                ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n                : wrap('(', join(args, ', '), ')')) +\n            ': ' +\n            type +\n            wrap(' ', join(directives, ' ')),\n    },\n    InputValueDefinition: {\n        leave: ({ name, type, defaultValue, directives }) => join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' '),\n    },\n    InterfaceTypeDefinition: {\n        leave: ({ name, interfaces, directives, fields }) => join([\n            'interface',\n            name,\n            wrap('implements ', join(interfaces, ' & ')),\n            join(directives, ' '),\n            block(fields),\n        ], ' '),\n    },\n    UnionTypeDefinition: {\n        leave: ({ name, directives, types }) => join(['union', name, join(directives, ' '), wrap('= ', join(types, ' | '))], ' '),\n    },\n    EnumTypeDefinition: {\n        leave: ({ name, directives, values }) => join(['enum', name, join(directives, ' '), block(values)], ' '),\n    },\n    EnumValueDefinition: {\n        leave: ({ name, directives }) => join([name, join(directives, ' ')], ' '),\n    },\n    InputObjectTypeDefinition: {\n        leave: ({ name, directives, fields }) => join(['input', name, join(directives, ' '), block(fields)], ' '),\n    },\n    DirectiveDefinition: {\n        leave: ({ name, arguments: args, repeatable, locations }) => 'directive @' +\n            name +\n            (hasMultilineItems(args)\n                ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n                : wrap('(', join(args, ', '), ')')) +\n            (repeatable ? ' repeatable' : '') +\n            ' on ' +\n            join(locations, ' | '),\n    },\n    SchemaExtension: {\n        leave: ({ directives, operationTypes }) => join(['extend schema', join(directives, ' '), block(operationTypes)], ' '),\n    },\n    ScalarTypeExtension: {\n        leave: ({ name, directives }) => join(['extend scalar', name, join(directives, ' ')], ' '),\n    },\n    ObjectTypeExtension: {\n        leave: ({ name, interfaces, directives, fields }) => join([\n            'extend type',\n            name,\n            wrap('implements ', join(interfaces, ' & ')),\n            join(directives, ' '),\n            block(fields),\n        ], ' '),\n    },\n    InterfaceTypeExtension: {\n        leave: ({ name, interfaces, directives, fields }) => join([\n            'extend interface',\n            name,\n            wrap('implements ', join(interfaces, ' & ')),\n            join(directives, ' '),\n            block(fields),\n        ], ' '),\n    },\n    UnionTypeExtension: {\n        leave: ({ name, directives, types }) => join(['extend union', name, join(directives, ' '), wrap('= ', join(types, ' | '))], ' '),\n    },\n    EnumTypeExtension: {\n        leave: ({ name, directives, values }) => join(['extend enum', name, join(directives, ' '), block(values)], ' '),\n    },\n    InputObjectTypeExtension: {\n        leave: ({ name, directives, fields }) => join(['extend input', name, join(directives, ' '), block(fields)], ' '),\n    },\n};\nconst printDocASTReducerWithComments = Object.keys(printDocASTReducer).reduce((prev, key) => ({\n    ...prev,\n    [key]: {\n        leave: addDescription(printDocASTReducer[key].leave),\n    },\n}), {});\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\nexport function printWithComments(ast) {\n    return visit(ast, printDocASTReducerWithComments);\n}\nfunction isFieldDefinitionNode(node) {\n    return node.kind === 'FieldDefinition';\n}\n// graphql < v13 and > v15 does not export getDescription\nexport function getDescription(node, options) {\n    if (node.description != null) {\n        return node.description.value;\n    }\n    if (options?.commentDescriptions) {\n        return getComment(node);\n    }\n}\nexport function getComment(node) {\n    const rawValue = getLeadingCommentBlock(node);\n    if (rawValue !== undefined) {\n        return dedentBlockStringValue(`\\n${rawValue}`);\n    }\n}\nexport function getLeadingCommentBlock(node) {\n    const loc = node.loc;\n    if (!loc) {\n        return;\n    }\n    const comments = [];\n    let token = loc.startToken.prev;\n    while (token != null &&\n        token.kind === TokenKind.COMMENT &&\n        token.next != null &&\n        token.prev != null &&\n        token.line + 1 === token.next.line &&\n        token.line !== token.prev.line) {\n        const value = String(token.value);\n        comments.push(value);\n        token = token.prev;\n    }\n    return comments.length > 0 ? comments.reverse().join('\\n') : undefined;\n}\nexport function dedentBlockStringValue(rawString) {\n    // Expand a block string's raw value into independent lines.\n    const lines = rawString.split(/\\r\\n|[\\n\\r]/g);\n    // Remove common indentation from all lines but first.\n    const commonIndent = getBlockStringIndentation(lines);\n    if (commonIndent !== 0) {\n        for (let i = 1; i < lines.length; i++) {\n            lines[i] = lines[i].slice(commonIndent);\n        }\n    }\n    // Remove leading and trailing blank lines.\n    while (lines.length > 0 && isBlank(lines[0])) {\n        lines.shift();\n    }\n    while (lines.length > 0 && isBlank(lines[lines.length - 1])) {\n        lines.pop();\n    }\n    // Return a string of the lines joined with U+000A.\n    return lines.join('\\n');\n}\n/**\n * @internal\n */\nexport function getBlockStringIndentation(lines) {\n    let commonIndent = null;\n    for (let i = 1; i < lines.length; i++) {\n        const line = lines[i];\n        const indent = leadingWhitespace(line);\n        if (indent === line.length) {\n            continue; // skip empty lines\n        }\n        if (commonIndent === null || indent < commonIndent) {\n            commonIndent = indent;\n            if (commonIndent === 0) {\n                break;\n            }\n        }\n    }\n    return commonIndent === null ? 0 : commonIndent;\n}\nfunction leadingWhitespace(str) {\n    let i = 0;\n    while (i < str.length && (str[i] === ' ' || str[i] === '\\t')) {\n        i++;\n    }\n    return i;\n}\nfunction isBlank(str) {\n    return leadingWhitespace(str) === str.length;\n}\n","// Taken from graphql-js\n// https://github.com/graphql/graphql-js/blob/main/src/jsutils/inspect.ts\nconst MAX_RECURSIVE_DEPTH = 3;\n/**\n * Used to print values in error messages.\n */\nexport function inspect(value) {\n    return formatValue(value, []);\n}\nfunction formatValue(value, seenValues) {\n    switch (typeof value) {\n        case 'string':\n            return JSON.stringify(value);\n        case 'function':\n            return value.name ? `[function ${value.name}]` : '[function]';\n        case 'object':\n            return formatObjectValue(value, seenValues);\n        default:\n            return String(value);\n    }\n}\nfunction formatError(value) {\n    // eslint-disable-next-line no-constant-condition\n    if ((value.name = 'GraphQLError')) {\n        return value.toString();\n    }\n    return `${value.name}: ${value.message};\\n ${value.stack}`;\n}\nfunction formatObjectValue(value, previouslySeenValues) {\n    if (value === null) {\n        return 'null';\n    }\n    if (value instanceof Error) {\n        if (value.name === 'AggregateError') {\n            return (formatError(value) +\n                '\\n' +\n                formatArray(value.errors, previouslySeenValues));\n        }\n        return formatError(value);\n    }\n    if (previouslySeenValues.includes(value)) {\n        return '[Circular]';\n    }\n    const seenValues = [...previouslySeenValues, value];\n    if (isJSONable(value)) {\n        const jsonValue = value.toJSON();\n        // check for infinite recursion\n        if (jsonValue !== value) {\n            return typeof jsonValue === 'string' ? jsonValue : formatValue(jsonValue, seenValues);\n        }\n    }\n    else if (Array.isArray(value)) {\n        return formatArray(value, seenValues);\n    }\n    return formatObject(value, seenValues);\n}\nfunction isJSONable(value) {\n    return typeof value.toJSON === 'function';\n}\nfunction formatObject(object, seenValues) {\n    const entries = Object.entries(object);\n    if (entries.length === 0) {\n        return '{}';\n    }\n    if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n        return '[' + getObjectTag(object) + ']';\n    }\n    const properties = entries.map(([key, value]) => key + ': ' + formatValue(value, seenValues));\n    return '{ ' + properties.join(', ') + ' }';\n}\nfunction formatArray(array, seenValues) {\n    if (array.length === 0) {\n        return '[]';\n    }\n    if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n        return '[Array]';\n    }\n    const len = array.length;\n    const items = [];\n    for (let i = 0; i < len; ++i) {\n        items.push(formatValue(array[i], seenValues));\n    }\n    return '[' + items.join(', ') + ']';\n}\nfunction getObjectTag(object) {\n    const tag = Object.prototype.toString\n        .call(object)\n        .replace(/^\\[object /, '')\n        .replace(/]$/, '');\n    if (tag === 'Object' && typeof object.constructor === 'function') {\n        const name = object.constructor.name;\n        if (typeof name === 'string' && name !== '') {\n            return name;\n        }\n    }\n    return tag;\n}\n","import { inspect } from 'cross-inspect';\nimport { isListType, isNonNullType, Kind } from 'graphql';\nexport function astFromType(type) {\n    if (isNonNullType(type)) {\n        const innerType = astFromType(type.ofType);\n        if (innerType.kind === Kind.NON_NULL_TYPE) {\n            throw new Error(`Invalid type node ${inspect(type)}. Inner type of non-null type cannot be a non-null type.`);\n        }\n        return {\n            kind: Kind.NON_NULL_TYPE,\n            type: innerType,\n        };\n    }\n    else if (isListType(type)) {\n        return {\n            kind: Kind.LIST_TYPE,\n            type: astFromType(type.ofType),\n        };\n    }\n    return {\n        kind: Kind.NAMED_TYPE,\n        name: {\n            kind: Kind.NAME,\n            value: type.name,\n        },\n    };\n}\n","import { Kind } from 'graphql';\n/**\n * Produces a GraphQL Value AST given a JavaScript object.\n * Function will match JavaScript/JSON values to GraphQL AST schema format\n * by using the following mapping.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String               |\n * | Number        | Int / Float          |\n * | BigInt        | Int                  |\n * | null          | NullValue            |\n *\n */\nexport function astFromValueUntyped(value) {\n    // only explicit null, not undefined, NaN\n    if (value === null) {\n        return { kind: Kind.NULL };\n    }\n    // undefined\n    if (value === undefined) {\n        return null;\n    }\n    // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n    // the value is not an array, convert the value using the list's item type.\n    if (Array.isArray(value)) {\n        const valuesNodes = [];\n        for (const item of value) {\n            const itemNode = astFromValueUntyped(item);\n            if (itemNode != null) {\n                valuesNodes.push(itemNode);\n            }\n        }\n        return { kind: Kind.LIST, values: valuesNodes };\n    }\n    if (typeof value === 'object') {\n        if (value?.toJSON) {\n            return astFromValueUntyped(value.toJSON());\n        }\n        const fieldNodes = [];\n        for (const fieldName in value) {\n            const fieldValue = value[fieldName];\n            const ast = astFromValueUntyped(fieldValue);\n            if (ast) {\n                fieldNodes.push({\n                    kind: Kind.OBJECT_FIELD,\n                    name: { kind: Kind.NAME, value: fieldName },\n                    value: ast,\n                });\n            }\n        }\n        return { kind: Kind.OBJECT, fields: fieldNodes };\n    }\n    // Others serialize based on their corresponding JavaScript scalar types.\n    if (typeof value === 'boolean') {\n        return { kind: Kind.BOOLEAN, value };\n    }\n    if (typeof value === 'bigint') {\n        return { kind: Kind.INT, value: String(value) };\n    }\n    // JavaScript numbers can be Int or Float values.\n    if (typeof value === 'number' && isFinite(value)) {\n        const stringNum = String(value);\n        return integerStringRegExp.test(stringNum)\n            ? { kind: Kind.INT, value: stringNum }\n            : { kind: Kind.FLOAT, value: stringNum };\n    }\n    if (typeof value === 'string') {\n        return { kind: Kind.STRING, value };\n    }\n    throw new TypeError(`Cannot convert value to AST: ${value}.`);\n}\n/**\n * IntValue:\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit ( Digit+ )?\n */\nconst integerStringRegExp = /^-?(?:0|[1-9][0-9]*)$/;\n","import { inspect } from 'cross-inspect';\nimport { isEnumType, isInputObjectType, isLeafType, isListType, isNonNullType, Kind, } from 'graphql';\nimport { astFromValueUntyped } from './astFromValueUntyped.js';\nimport { isIterableObject, isObjectLike } from './jsutils.js';\n/**\n * Produces a GraphQL Value AST given a JavaScript object.\n * Function will match JavaScript/JSON values to GraphQL AST schema format\n * by using suggested GraphQLInputType. For example:\n *\n *     astFromValue(\"value\", GraphQLString)\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * JavaScript values.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String / Enum Value  |\n * | Number        | Int / Float          |\n * | BigInt        | Int                  |\n * | Unknown       | Enum Value           |\n * | null          | NullValue            |\n *\n */\nexport function astFromValue(value, type) {\n    if (isNonNullType(type)) {\n        const astValue = astFromValue(value, type.ofType);\n        if (astValue?.kind === Kind.NULL) {\n            return null;\n        }\n        return astValue;\n    }\n    // only explicit null, not undefined, NaN\n    if (value === null) {\n        return { kind: Kind.NULL };\n    }\n    // undefined\n    if (value === undefined) {\n        return null;\n    }\n    // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n    // the value is not an array, convert the value using the list's item type.\n    if (isListType(type)) {\n        const itemType = type.ofType;\n        if (isIterableObject(value)) {\n            const valuesNodes = [];\n            for (const item of value) {\n                const itemNode = astFromValue(item, itemType);\n                if (itemNode != null) {\n                    valuesNodes.push(itemNode);\n                }\n            }\n            return { kind: Kind.LIST, values: valuesNodes };\n        }\n        return astFromValue(value, itemType);\n    }\n    // Populate the fields of the input object by creating ASTs from each value\n    // in the JavaScript object according to the fields in the input type.\n    if (isInputObjectType(type)) {\n        if (!isObjectLike(value)) {\n            return null;\n        }\n        const fieldNodes = [];\n        for (const field of Object.values(type.getFields())) {\n            const fieldValue = astFromValue(value[field.name], field.type);\n            if (fieldValue) {\n                fieldNodes.push({\n                    kind: Kind.OBJECT_FIELD,\n                    name: { kind: Kind.NAME, value: field.name },\n                    value: fieldValue,\n                });\n            }\n        }\n        return { kind: Kind.OBJECT, fields: fieldNodes };\n    }\n    if (isLeafType(type)) {\n        // Since value is an internally represented value, it must be serialized\n        // to an externally represented value before converting into an AST.\n        const serialized = type.serialize(value);\n        if (serialized == null) {\n            return null;\n        }\n        if (isEnumType(type)) {\n            return { kind: Kind.ENUM, value: serialized };\n        }\n        // ID types can use Int literals.\n        if (type.name === 'ID' &&\n            typeof serialized === 'string' &&\n            integerStringRegExp.test(serialized)) {\n            return { kind: Kind.INT, value: serialized };\n        }\n        return astFromValueUntyped(serialized);\n    }\n    /* c8 ignore next 3 */\n    // Not reachable, all possible types have been considered.\n    console.assert(false, 'Unexpected input type: ' + inspect(type));\n}\n/**\n * IntValue:\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit ( Digit+ )?\n */\nconst integerStringRegExp = /^-?(?:0|[1-9][0-9]*)$/;\n","export function isIterableObject(value) {\n    return value != null && typeof value === 'object' && Symbol.iterator in value;\n}\nexport function isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nexport function isPromise(value) {\n    return value?.then != null;\n}\nexport function promiseReduce(values, callbackFn, initialValue) {\n    let accumulator = initialValue;\n    for (const value of values) {\n        accumulator = isPromise(accumulator)\n            ? accumulator.then(resolved => callbackFn(resolved, value))\n            : callbackFn(accumulator, value);\n    }\n    return accumulator;\n}\nexport function hasOwnProperty(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","import { Kind } from 'graphql';\nexport function getDescriptionNode(obj) {\n    if (obj.astNode?.description) {\n        return {\n            ...obj.astNode.description,\n            block: true,\n        };\n    }\n    if (obj.description) {\n        return {\n            kind: Kind.STRING,\n            value: obj.description,\n            block: true,\n        };\n    }\n}\n","import { getArgumentValues } from './getArgumentValues.js';\nexport function getDirectivesInExtensions(node, pathToDirectivesInExtensions = ['directives']) {\n    return pathToDirectivesInExtensions.reduce((acc, pathSegment) => (acc == null ? acc : acc[pathSegment]), node?.extensions);\n}\nfunction _getDirectiveInExtensions(directivesInExtensions, directiveName) {\n    const directiveInExtensions = directivesInExtensions.filter(directiveAnnotation => directiveAnnotation.name === directiveName);\n    if (!directiveInExtensions.length) {\n        return undefined;\n    }\n    return directiveInExtensions.map(directive => directive.args ?? {});\n}\nexport function getDirectiveInExtensions(node, directiveName, pathToDirectivesInExtensions = ['directives']) {\n    const directivesInExtensions = pathToDirectivesInExtensions.reduce((acc, pathSegment) => (acc == null ? acc : acc[pathSegment]), node?.extensions);\n    if (directivesInExtensions === undefined) {\n        return undefined;\n    }\n    if (Array.isArray(directivesInExtensions)) {\n        return _getDirectiveInExtensions(directivesInExtensions, directiveName);\n    }\n    // Support condensed format by converting to longer format\n    // The condensed format does not preserve ordering of directives when  repeatable directives are used.\n    // See https://github.com/ardatan/graphql-tools/issues/2534\n    const reformattedDirectivesInExtensions = [];\n    for (const [name, argsOrArrayOfArgs] of Object.entries(directivesInExtensions)) {\n        if (Array.isArray(argsOrArrayOfArgs)) {\n            for (const args of argsOrArrayOfArgs) {\n                reformattedDirectivesInExtensions.push({ name, args });\n            }\n        }\n        else {\n            reformattedDirectivesInExtensions.push({ name, args: argsOrArrayOfArgs });\n        }\n    }\n    return _getDirectiveInExtensions(reformattedDirectivesInExtensions, directiveName);\n}\nexport function getDirectives(schema, node, pathToDirectivesInExtensions = ['directives']) {\n    const directivesInExtensions = getDirectivesInExtensions(node, pathToDirectivesInExtensions);\n    if (directivesInExtensions != null && directivesInExtensions.length > 0) {\n        return directivesInExtensions;\n    }\n    const schemaDirectives = schema && schema.getDirectives ? schema.getDirectives() : [];\n    const schemaDirectiveMap = schemaDirectives.reduce((schemaDirectiveMap, schemaDirective) => {\n        schemaDirectiveMap[schemaDirective.name] = schemaDirective;\n        return schemaDirectiveMap;\n    }, {});\n    let astNodes = [];\n    if (node.astNode) {\n        astNodes.push(node.astNode);\n    }\n    if ('extensionASTNodes' in node && node.extensionASTNodes) {\n        astNodes = [...astNodes, ...node.extensionASTNodes];\n    }\n    const result = [];\n    for (const astNode of astNodes) {\n        if (astNode.directives) {\n            for (const directiveNode of astNode.directives) {\n                const schemaDirective = schemaDirectiveMap[directiveNode.name.value];\n                if (schemaDirective) {\n                    result.push({\n                        name: directiveNode.name.value,\n                        args: getArgumentValues(schemaDirective, directiveNode),\n                    });\n                }\n            }\n        }\n    }\n    return result;\n}\nexport function getDirective(schema, node, directiveName, pathToDirectivesInExtensions = ['directives']) {\n    const directiveInExtensions = getDirectiveInExtensions(node, directiveName, pathToDirectivesInExtensions);\n    if (directiveInExtensions != null) {\n        return directiveInExtensions;\n    }\n    const schemaDirective = schema && schema.getDirective ? schema.getDirective(directiveName) : undefined;\n    if (schemaDirective == null) {\n        return undefined;\n    }\n    let astNodes = [];\n    if (node.astNode) {\n        astNodes.push(node.astNode);\n    }\n    if ('extensionASTNodes' in node && node.extensionASTNodes) {\n        astNodes = [...astNodes, ...node.extensionASTNodes];\n    }\n    const result = [];\n    for (const astNode of astNodes) {\n        if (astNode.directives) {\n            for (const directiveNode of astNode.directives) {\n                if (directiveNode.name.value === directiveName) {\n                    result.push(getArgumentValues(schemaDirective, directiveNode));\n                }\n            }\n        }\n    }\n    if (!result.length) {\n        return undefined;\n    }\n    return result;\n}\n","import { parse } from 'graphql';\nexport const asArray = (fns) => (Array.isArray(fns) ? fns : fns ? [fns] : []);\nconst invalidDocRegex = /\\.[a-z0-9]+$/i;\nexport function isDocumentString(str) {\n    if (typeof str !== 'string') {\n        return false;\n    }\n    // XXX: is-valid-path or is-glob treat SDL as a valid path\n    // (`scalar Date` for example)\n    // this why checking the extension is fast enough\n    // and prevent from parsing the string in order to find out\n    // if the string is a SDL\n    if (invalidDocRegex.test(str)) {\n        return false;\n    }\n    try {\n        parse(str);\n        return true;\n    }\n    catch (e) { }\n    return false;\n}\nconst invalidPathRegex = /[‘“!%^<>`\\n]/;\n/**\n * Checkes whether the `str` contains any path illegal characters.\n *\n * A string may sometimes look like a path but is not (like an SDL of a simple\n * GraphQL schema). To make sure we don't yield false-positives in such cases,\n * we disallow new lines in paths (even though most Unix systems support new\n * lines in file names).\n */\nexport function isValidPath(str) {\n    return typeof str === 'string' && !invalidPathRegex.test(str);\n}\nexport function compareStrings(a, b) {\n    if (String(a) < String(b)) {\n        return -1;\n    }\n    if (String(a) > String(b)) {\n        return 1;\n    }\n    return 0;\n}\nexport function nodeToString(a) {\n    let name;\n    if ('alias' in a) {\n        name = a.alias?.value;\n    }\n    if (name == null && 'name' in a) {\n        name = a.name?.value;\n    }\n    if (name == null) {\n        name = a.kind;\n    }\n    return name;\n}\nexport function compareNodes(a, b, customFn) {\n    const aStr = nodeToString(a);\n    const bStr = nodeToString(b);\n    if (typeof customFn === 'function') {\n        return customFn(aStr, bStr);\n    }\n    return compareStrings(aStr, bStr);\n}\nexport function isSome(input) {\n    return input != null;\n}\nexport function assertSome(input, message = 'Value should be something') {\n    if (input == null) {\n        throw new Error(message);\n    }\n}\n","export function memoize1(fn) {\n    const memoize1cache = new WeakMap();\n    return function memoized(a1) {\n        const cachedValue = memoize1cache.get(a1);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1);\n            memoize1cache.set(a1, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nexport function memoize2(fn) {\n    const memoize2cache = new WeakMap();\n    return function memoized(a1, a2) {\n        let cache2 = memoize2cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2cache.set(a1, cache2);\n            const newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nexport function memoize3(fn) {\n    const memoize3Cache = new WeakMap();\n    return function memoized(a1, a2, a3) {\n        let cache2 = memoize3Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize3Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        const cachedValue = cache3.get(a3);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nexport function memoize4(fn) {\n    const memoize4Cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4) {\n        let cache2 = memoize4Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize4Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        const cache4 = cache3.get(a3);\n        if (!cache4) {\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        const cachedValue = cache4.get(a4);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nexport function memoize5(fn) {\n    const memoize5Cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4, a5) {\n        let cache2 = memoize5Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize5Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache4 = cache3.get(a3);\n        if (!cache4) {\n            cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache5 = cache4.get(a4);\n        if (!cache5) {\n            cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        const cachedValue = cache5.get(a5);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nexport function memoize2of4(fn) {\n    const memoize2of4cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4) {\n        let cache2 = memoize2of4cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2of4cache.set(a1, cache2);\n            const newValue = fn(a1, a2, a3, a4);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nexport function memoize2of5(fn) {\n    const memoize2of4cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4, a5) {\n        let cache2 = memoize2of4cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2of4cache.set(a1, cache2);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\n","import { createGraphQLError } from './errors.js';\nimport { memoize1 } from './memoize.js';\nexport function getDefinedRootType(schema, operation, nodes) {\n    const rootTypeMap = getRootTypeMap(schema);\n    const rootType = rootTypeMap.get(operation);\n    if (rootType == null) {\n        throw createGraphQLError(`Schema is not configured to execute ${operation} operation.`, {\n            nodes,\n        });\n    }\n    return rootType;\n}\nexport const getRootTypeNames = memoize1(function getRootTypeNames(schema) {\n    const rootTypes = getRootTypes(schema);\n    return new Set([...rootTypes].map(type => type.name));\n});\nexport const getRootTypes = memoize1(function getRootTypes(schema) {\n    const rootTypeMap = getRootTypeMap(schema);\n    return new Set(rootTypeMap.values());\n});\nexport const getRootTypeMap = memoize1(function getRootTypeMap(schema) {\n    const rootTypeMap = new Map();\n    const queryType = schema.getQueryType();\n    if (queryType) {\n        rootTypeMap.set('query', queryType);\n    }\n    const mutationType = schema.getMutationType();\n    if (mutationType) {\n        rootTypeMap.set('mutation', mutationType);\n    }\n    const subscriptionType = schema.getSubscriptionType();\n    if (subscriptionType) {\n        rootTypeMap.set('subscription', subscriptionType);\n    }\n    return rootTypeMap;\n});\n","import { GraphQLDeprecatedDirective, isEnumType, isInputObjectType, isInterfaceType, isIntrospectionType, isObjectType, isScalarType, isSpecifiedDirective, isSpecifiedScalarType, isUnionType, Kind, print, } from 'graphql';\nimport { astFromType } from './astFromType.js';\nimport { astFromValue } from './astFromValue.js';\nimport { astFromValueUntyped } from './astFromValueUntyped.js';\nimport { getDescriptionNode } from './descriptionFromObject.js';\nimport { getDirectivesInExtensions } from './get-directives.js';\nimport { isSome } from './helpers.js';\nimport { getRootTypeMap } from './rootTypes.js';\nexport function getDocumentNodeFromSchema(schema, options = {}) {\n    const pathToDirectivesInExtensions = options.pathToDirectivesInExtensions;\n    const typesMap = schema.getTypeMap();\n    const schemaNode = astFromSchema(schema, pathToDirectivesInExtensions);\n    const definitions = schemaNode != null ? [schemaNode] : [];\n    const directives = schema.getDirectives();\n    for (const directive of directives) {\n        if (isSpecifiedDirective(directive)) {\n            continue;\n        }\n        definitions.push(astFromDirective(directive, schema, pathToDirectivesInExtensions));\n    }\n    for (const typeName in typesMap) {\n        const type = typesMap[typeName];\n        const isPredefinedScalar = isSpecifiedScalarType(type);\n        const isIntrospection = isIntrospectionType(type);\n        if (isPredefinedScalar || isIntrospection) {\n            continue;\n        }\n        if (isObjectType(type)) {\n            definitions.push(astFromObjectType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if (isInterfaceType(type)) {\n            definitions.push(astFromInterfaceType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if (isUnionType(type)) {\n            definitions.push(astFromUnionType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if (isInputObjectType(type)) {\n            definitions.push(astFromInputObjectType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if (isEnumType(type)) {\n            definitions.push(astFromEnumType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if (isScalarType(type)) {\n            definitions.push(astFromScalarType(type, schema, pathToDirectivesInExtensions));\n        }\n        else {\n            throw new Error(`Unknown type ${type}.`);\n        }\n    }\n    return {\n        kind: Kind.DOCUMENT,\n        definitions,\n    };\n}\n// this approach uses the default schema printer rather than a custom solution, so may be more backwards compatible\n// currently does not allow customization of printSchema options having to do with comments.\nexport function printSchemaWithDirectives(schema, options = {}) {\n    const documentNode = getDocumentNodeFromSchema(schema, options);\n    return print(documentNode);\n}\nexport function astFromSchema(schema, pathToDirectivesInExtensions) {\n    const operationTypeMap = new Map([\n        ['query', undefined],\n        ['mutation', undefined],\n        ['subscription', undefined],\n    ]);\n    const nodes = [];\n    if (schema.astNode != null) {\n        nodes.push(schema.astNode);\n    }\n    if (schema.extensionASTNodes != null) {\n        for (const extensionASTNode of schema.extensionASTNodes) {\n            nodes.push(extensionASTNode);\n        }\n    }\n    for (const node of nodes) {\n        if (node.operationTypes) {\n            for (const operationTypeDefinitionNode of node.operationTypes) {\n                operationTypeMap.set(operationTypeDefinitionNode.operation, operationTypeDefinitionNode);\n            }\n        }\n    }\n    const rootTypeMap = getRootTypeMap(schema);\n    for (const [operationTypeNode, operationTypeDefinitionNode] of operationTypeMap) {\n        const rootType = rootTypeMap.get(operationTypeNode);\n        if (rootType != null) {\n            const rootTypeAST = astFromType(rootType);\n            if (operationTypeDefinitionNode != null) {\n                operationTypeDefinitionNode.type = rootTypeAST;\n            }\n            else {\n                operationTypeMap.set(operationTypeNode, {\n                    kind: Kind.OPERATION_TYPE_DEFINITION,\n                    operation: operationTypeNode,\n                    type: rootTypeAST,\n                });\n            }\n        }\n    }\n    const operationTypes = [...operationTypeMap.values()].filter(isSome);\n    const directives = getDirectiveNodes(schema, schema, pathToDirectivesInExtensions);\n    if (!operationTypes.length && !directives.length) {\n        return null;\n    }\n    const schemaNode = {\n        kind: operationTypes != null ? Kind.SCHEMA_DEFINITION : Kind.SCHEMA_EXTENSION,\n        operationTypes,\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: directives,\n    };\n    const descriptionNode = getDescriptionNode(schema);\n    if (descriptionNode) {\n        schemaNode.description = descriptionNode;\n    }\n    return schemaNode;\n}\nexport function astFromDirective(directive, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: Kind.DIRECTIVE_DEFINITION,\n        description: getDescriptionNode(directive),\n        name: {\n            kind: Kind.NAME,\n            value: directive.name,\n        },\n        arguments: directive.args?.map(arg => astFromArg(arg, schema, pathToDirectivesInExtensions)),\n        repeatable: directive.isRepeatable,\n        locations: directive.locations?.map(location => ({\n            kind: Kind.NAME,\n            value: location,\n        })) || [],\n    };\n}\nexport function getDirectiveNodes(entity, schema, pathToDirectivesInExtensions) {\n    const directivesInExtensions = getDirectivesInExtensions(entity, pathToDirectivesInExtensions);\n    let nodes = [];\n    if (entity.astNode != null) {\n        nodes.push(entity.astNode);\n    }\n    if ('extensionASTNodes' in entity && entity.extensionASTNodes != null) {\n        nodes = nodes.concat(entity.extensionASTNodes);\n    }\n    let directives;\n    if (directivesInExtensions != null) {\n        directives = makeDirectiveNodes(schema, directivesInExtensions);\n    }\n    else {\n        directives = [];\n        for (const node of nodes) {\n            if (node.directives) {\n                directives.push(...node.directives);\n            }\n        }\n    }\n    return directives;\n}\nexport function getDeprecatableDirectiveNodes(entity, schema, pathToDirectivesInExtensions) {\n    let directiveNodesBesidesDeprecated = [];\n    let deprecatedDirectiveNode = null;\n    const directivesInExtensions = getDirectivesInExtensions(entity, pathToDirectivesInExtensions);\n    let directives;\n    if (directivesInExtensions != null) {\n        directives = makeDirectiveNodes(schema, directivesInExtensions);\n    }\n    else {\n        directives = entity.astNode?.directives;\n    }\n    if (directives != null) {\n        directiveNodesBesidesDeprecated = directives.filter(directive => directive.name.value !== 'deprecated');\n        if (entity.deprecationReason != null) {\n            deprecatedDirectiveNode = directives.filter(directive => directive.name.value === 'deprecated')?.[0];\n        }\n    }\n    if (entity.deprecationReason != null &&\n        deprecatedDirectiveNode == null) {\n        deprecatedDirectiveNode = makeDeprecatedDirective(entity.deprecationReason);\n    }\n    return deprecatedDirectiveNode == null\n        ? directiveNodesBesidesDeprecated\n        : [deprecatedDirectiveNode].concat(directiveNodesBesidesDeprecated);\n}\nexport function astFromArg(arg, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: Kind.INPUT_VALUE_DEFINITION,\n        description: getDescriptionNode(arg),\n        name: {\n            kind: Kind.NAME,\n            value: arg.name,\n        },\n        type: astFromType(arg.type),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        defaultValue: arg.defaultValue !== undefined\n            ? astFromValue(arg.defaultValue, arg.type) ?? undefined\n            : undefined,\n        directives: getDeprecatableDirectiveNodes(arg, schema, pathToDirectivesInExtensions),\n    };\n}\nexport function astFromObjectType(type, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: Kind.OBJECT_TYPE_DEFINITION,\n        description: getDescriptionNode(type),\n        name: {\n            kind: Kind.NAME,\n            value: type.name,\n        },\n        fields: Object.values(type.getFields()).map(field => astFromField(field, schema, pathToDirectivesInExtensions)),\n        interfaces: Object.values(type.getInterfaces()).map(iFace => astFromType(iFace)),\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n}\nexport function astFromInterfaceType(type, schema, pathToDirectivesInExtensions) {\n    const node = {\n        kind: Kind.INTERFACE_TYPE_DEFINITION,\n        description: getDescriptionNode(type),\n        name: {\n            kind: Kind.NAME,\n            value: type.name,\n        },\n        fields: Object.values(type.getFields()).map(field => astFromField(field, schema, pathToDirectivesInExtensions)),\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n    if ('getInterfaces' in type) {\n        node.interfaces = Object.values(type.getInterfaces()).map(iFace => astFromType(iFace));\n    }\n    return node;\n}\nexport function astFromUnionType(type, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: Kind.UNION_TYPE_DEFINITION,\n        description: getDescriptionNode(type),\n        name: {\n            kind: Kind.NAME,\n            value: type.name,\n        },\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n        types: type.getTypes().map(type => astFromType(type)),\n    };\n}\nexport function astFromInputObjectType(type, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n        description: getDescriptionNode(type),\n        name: {\n            kind: Kind.NAME,\n            value: type.name,\n        },\n        fields: Object.values(type.getFields()).map(field => astFromInputField(field, schema, pathToDirectivesInExtensions)),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n}\nexport function astFromEnumType(type, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: Kind.ENUM_TYPE_DEFINITION,\n        description: getDescriptionNode(type),\n        name: {\n            kind: Kind.NAME,\n            value: type.name,\n        },\n        values: Object.values(type.getValues()).map(value => astFromEnumValue(value, schema, pathToDirectivesInExtensions)),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n}\nexport function astFromScalarType(type, schema, pathToDirectivesInExtensions) {\n    const directivesInExtensions = getDirectivesInExtensions(type, pathToDirectivesInExtensions);\n    const directives = directivesInExtensions\n        ? makeDirectiveNodes(schema, directivesInExtensions)\n        : type.astNode?.directives || [];\n    const specifiedByValue = (type['specifiedByUrl'] ||\n        type['specifiedByURL']);\n    if (specifiedByValue &&\n        !directives.some(directiveNode => directiveNode.name.value === 'specifiedBy')) {\n        const specifiedByArgs = {\n            url: specifiedByValue,\n        };\n        directives.push(makeDirectiveNode('specifiedBy', specifiedByArgs));\n    }\n    return {\n        kind: Kind.SCALAR_TYPE_DEFINITION,\n        description: getDescriptionNode(type),\n        name: {\n            kind: Kind.NAME,\n            value: type.name,\n        },\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: directives,\n    };\n}\nexport function astFromField(field, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: Kind.FIELD_DEFINITION,\n        description: getDescriptionNode(field),\n        name: {\n            kind: Kind.NAME,\n            value: field.name,\n        },\n        arguments: field.args.map(arg => astFromArg(arg, schema, pathToDirectivesInExtensions)),\n        type: astFromType(field.type),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDeprecatableDirectiveNodes(field, schema, pathToDirectivesInExtensions),\n    };\n}\nexport function astFromInputField(field, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: Kind.INPUT_VALUE_DEFINITION,\n        description: getDescriptionNode(field),\n        name: {\n            kind: Kind.NAME,\n            value: field.name,\n        },\n        type: astFromType(field.type),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDeprecatableDirectiveNodes(field, schema, pathToDirectivesInExtensions),\n        defaultValue: astFromValue(field.defaultValue, field.type) ?? undefined,\n    };\n}\nexport function astFromEnumValue(value, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: Kind.ENUM_VALUE_DEFINITION,\n        description: getDescriptionNode(value),\n        name: {\n            kind: Kind.NAME,\n            value: value.name,\n        },\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDeprecatableDirectiveNodes(value, schema, pathToDirectivesInExtensions),\n    };\n}\nexport function makeDeprecatedDirective(deprecationReason) {\n    return makeDirectiveNode('deprecated', { reason: deprecationReason }, GraphQLDeprecatedDirective);\n}\nexport function makeDirectiveNode(name, args, directive) {\n    const directiveArguments = [];\n    if (directive != null) {\n        for (const arg of directive.args) {\n            const argName = arg.name;\n            const argValue = args[argName];\n            if (argValue !== undefined) {\n                const value = astFromValue(argValue, arg.type);\n                if (value) {\n                    directiveArguments.push({\n                        kind: Kind.ARGUMENT,\n                        name: {\n                            kind: Kind.NAME,\n                            value: argName,\n                        },\n                        value,\n                    });\n                }\n            }\n        }\n    }\n    else {\n        for (const argName in args) {\n            const argValue = args[argName];\n            const value = astFromValueUntyped(argValue);\n            if (value) {\n                directiveArguments.push({\n                    kind: Kind.ARGUMENT,\n                    name: {\n                        kind: Kind.NAME,\n                        value: argName,\n                    },\n                    value,\n                });\n            }\n        }\n    }\n    return {\n        kind: Kind.DIRECTIVE,\n        name: {\n            kind: Kind.NAME,\n            value: name,\n        },\n        arguments: directiveArguments,\n    };\n}\nexport function makeDirectiveNodes(schema, directiveValues) {\n    const directiveNodes = [];\n    for (const directiveName in directiveValues) {\n        const arrayOrSingleValue = directiveValues[directiveName];\n        const directive = schema?.getDirective(directiveName);\n        if (Array.isArray(arrayOrSingleValue)) {\n            for (const value of arrayOrSingleValue) {\n                directiveNodes.push(makeDirectiveNode(directiveName, value, directive));\n            }\n        }\n        else {\n            directiveNodes.push(makeDirectiveNode(directiveName, arrayOrSingleValue, directive));\n        }\n    }\n    return directiveNodes;\n}\n","import { Kind, Source } from 'graphql';\nexport function isStringTypes(types) {\n    return typeof types === 'string';\n}\nexport function isSourceTypes(types) {\n    return types instanceof Source;\n}\nexport function extractType(type) {\n    let visitedType = type;\n    while (visitedType.kind === Kind.LIST_TYPE || visitedType.kind === 'NonNullType') {\n        visitedType = visitedType.type;\n    }\n    return visitedType;\n}\nexport function isWrappingTypeNode(type) {\n    return type.kind !== Kind.NAMED_TYPE;\n}\nexport function isListTypeNode(type) {\n    return type.kind === Kind.LIST_TYPE;\n}\nexport function isNonNullTypeNode(type) {\n    return type.kind === Kind.NON_NULL_TYPE;\n}\nexport function printTypeNode(type) {\n    if (isListTypeNode(type)) {\n        return `[${printTypeNode(type.type)}]`;\n    }\n    if (isNonNullTypeNode(type)) {\n        return `${printTypeNode(type.type)}!`;\n    }\n    return type.name.value;\n}\nexport var CompareVal;\n(function (CompareVal) {\n    CompareVal[CompareVal[\"A_SMALLER_THAN_B\"] = -1] = \"A_SMALLER_THAN_B\";\n    CompareVal[CompareVal[\"A_EQUALS_B\"] = 0] = \"A_EQUALS_B\";\n    CompareVal[CompareVal[\"A_GREATER_THAN_B\"] = 1] = \"A_GREATER_THAN_B\";\n})(CompareVal || (CompareVal = {}));\nexport function defaultStringComparator(a, b) {\n    if (a == null && b == null) {\n        return CompareVal.A_EQUALS_B;\n    }\n    if (a == null) {\n        return CompareVal.A_SMALLER_THAN_B;\n    }\n    if (b == null) {\n        return CompareVal.A_GREATER_THAN_B;\n    }\n    if (a < b)\n        return CompareVal.A_SMALLER_THAN_B;\n    if (a > b)\n        return CompareVal.A_GREATER_THAN_B;\n    return CompareVal.A_EQUALS_B;\n}\n","import { isSome } from '@graphql-tools/utils';\nfunction directiveAlreadyExists(directivesArr, otherDirective) {\n    return !!directivesArr.find(directive => directive.name.value === otherDirective.name.value);\n}\nfunction isRepeatableDirective(directive, directives) {\n    return !!directives?.[directive.name.value]?.repeatable;\n}\nfunction nameAlreadyExists(name, namesArr) {\n    return namesArr.some(({ value }) => value === name.value);\n}\nfunction mergeArguments(a1, a2) {\n    const result = [...a2];\n    for (const argument of a1) {\n        const existingIndex = result.findIndex(a => a.name.value === argument.name.value);\n        if (existingIndex > -1) {\n            const existingArg = result[existingIndex];\n            if (existingArg.value.kind === 'ListValue') {\n                const source = existingArg.value.values;\n                const target = argument.value.values;\n                // merge values of two lists\n                existingArg.value.values = deduplicateLists(source, target, (targetVal, source) => {\n                    const value = targetVal.value;\n                    return !value || !source.some((sourceVal) => sourceVal.value === value);\n                });\n            }\n            else {\n                existingArg.value = argument.value;\n            }\n        }\n        else {\n            result.push(argument);\n        }\n    }\n    return result;\n}\nfunction deduplicateDirectives(directives, definitions) {\n    return directives\n        .map((directive, i, all) => {\n        const firstAt = all.findIndex(d => d.name.value === directive.name.value);\n        if (firstAt !== i && !isRepeatableDirective(directive, definitions)) {\n            const dup = all[firstAt];\n            directive.arguments = mergeArguments(directive.arguments, dup.arguments);\n            return null;\n        }\n        return directive;\n    })\n        .filter(isSome);\n}\nexport function mergeDirectives(d1 = [], d2 = [], config, directives) {\n    const reverseOrder = config && config.reverseDirectives;\n    const asNext = reverseOrder ? d1 : d2;\n    const asFirst = reverseOrder ? d2 : d1;\n    const result = deduplicateDirectives([...asNext], directives);\n    for (const directive of asFirst) {\n        if (directiveAlreadyExists(result, directive) &&\n            !isRepeatableDirective(directive, directives)) {\n            const existingDirectiveIndex = result.findIndex(d => d.name.value === directive.name.value);\n            const existingDirective = result[existingDirectiveIndex];\n            result[existingDirectiveIndex].arguments = mergeArguments(directive.arguments || [], existingDirective.arguments || []);\n        }\n        else {\n            result.push(directive);\n        }\n    }\n    return result;\n}\nexport function mergeDirective(node, existingNode) {\n    if (existingNode) {\n        return {\n            ...node,\n            arguments: deduplicateLists(existingNode.arguments || [], node.arguments || [], (arg, existingArgs) => !nameAlreadyExists(arg.name, existingArgs.map(a => a.name))),\n            locations: [\n                ...existingNode.locations,\n                ...node.locations.filter(name => !nameAlreadyExists(name, existingNode.locations)),\n            ],\n        };\n    }\n    return node;\n}\nfunction deduplicateLists(source, target, filterFn) {\n    return source.concat(target.filter(val => filterFn(val, source)));\n}\n","import { compareNodes } from '@graphql-tools/utils';\nimport { mergeDirectives } from './directives.js';\nexport function mergeEnumValues(first, second, config, directives) {\n    if (config?.consistentEnumMerge) {\n        const reversed = [];\n        if (first) {\n            reversed.push(...first);\n        }\n        first = second;\n        second = reversed;\n    }\n    const enumValueMap = new Map();\n    if (first) {\n        for (const firstValue of first) {\n            enumValueMap.set(firstValue.name.value, firstValue);\n        }\n    }\n    if (second) {\n        for (const secondValue of second) {\n            const enumValue = secondValue.name.value;\n            if (enumValueMap.has(enumValue)) {\n                const firstValue = enumValueMap.get(enumValue);\n                firstValue.description = secondValue.description || firstValue.description;\n                firstValue.directives = mergeDirectives(secondValue.directives, firstValue.directives, directives);\n            }\n            else {\n                enumValueMap.set(enumValue, secondValue);\n            }\n        }\n    }\n    const result = [...enumValueMap.values()];\n    if (config && config.sort) {\n        result.sort(compareNodes);\n    }\n    return result;\n}\n","import { Kind, } from 'graphql';\nimport { mergeDirectives } from './directives.js';\nimport { mergeEnumValues } from './enum-values.js';\nexport function mergeEnum(e1, e2, config, directives) {\n    if (e2) {\n        return {\n            name: e1.name,\n            description: e1['description'] || e2['description'],\n            kind: config?.convertExtensions ||\n                e1.kind === 'EnumTypeDefinition' ||\n                e2.kind === 'EnumTypeDefinition'\n                ? 'EnumTypeDefinition'\n                : 'EnumTypeExtension',\n            loc: e1.loc,\n            directives: mergeDirectives(e1.directives, e2.directives, config, directives),\n            values: mergeEnumValues(e1.values, e2.values, config),\n        };\n    }\n    return config?.convertExtensions\n        ? {\n            ...e1,\n            kind: Kind.ENUM_TYPE_DEFINITION,\n        }\n        : e1;\n}\n","import { compareNodes, isSome } from '@graphql-tools/utils';\nexport function mergeArguments(args1, args2, config) {\n    const result = deduplicateArguments([...args2, ...args1].filter(isSome), config);\n    if (config && config.sort) {\n        result.sort(compareNodes);\n    }\n    return result;\n}\nfunction deduplicateArguments(args, config) {\n    return args.reduce((acc, current) => {\n        const dupIndex = acc.findIndex(arg => arg.name.value === current.name.value);\n        if (dupIndex === -1) {\n            return acc.concat([current]);\n        }\n        else if (!config?.reverseArguments) {\n            acc[dupIndex] = current;\n        }\n        return acc;\n    }, []);\n}\n","import { compareNodes } from '@graphql-tools/utils';\nimport { mergeArguments } from './arguments.js';\nimport { mergeDirectives } from './directives.js';\nimport { extractType, isListTypeNode, isNonNullTypeNode, isWrappingTypeNode, printTypeNode, } from './utils.js';\nfunction fieldAlreadyExists(fieldsArr, otherField) {\n    const resultIndex = fieldsArr.findIndex(field => field.name.value === otherField.name.value);\n    return [resultIndex > -1 ? fieldsArr[resultIndex] : null, resultIndex];\n}\nexport function mergeFields(type, f1, f2, config, directives) {\n    const result = [];\n    if (f2 != null) {\n        result.push(...f2);\n    }\n    if (f1 != null) {\n        for (const field of f1) {\n            const [existing, existingIndex] = fieldAlreadyExists(result, field);\n            if (existing && !config?.ignoreFieldConflicts) {\n                const newField = (config?.onFieldTypeConflict &&\n                    config.onFieldTypeConflict(existing, field, type, config?.throwOnConflict)) ||\n                    preventConflicts(type, existing, field, config?.throwOnConflict);\n                newField.arguments = mergeArguments(field['arguments'] || [], existing['arguments'] || [], config);\n                newField.directives = mergeDirectives(field.directives, existing.directives, config, directives);\n                newField.description = field.description || existing.description;\n                result[existingIndex] = newField;\n            }\n            else {\n                result.push(field);\n            }\n        }\n    }\n    if (config && config.sort) {\n        result.sort(compareNodes);\n    }\n    if (config && config.exclusions) {\n        const exclusions = config.exclusions;\n        return result.filter(field => !exclusions.includes(`${type.name.value}.${field.name.value}`));\n    }\n    return result;\n}\nfunction preventConflicts(type, a, b, ignoreNullability = false) {\n    const aType = printTypeNode(a.type);\n    const bType = printTypeNode(b.type);\n    if (aType !== bType) {\n        const t1 = extractType(a.type);\n        const t2 = extractType(b.type);\n        if (t1.name.value !== t2.name.value) {\n            throw new Error(`Field \"${b.name.value}\" already defined with a different type. Declared as \"${t1.name.value}\", but you tried to override with \"${t2.name.value}\"`);\n        }\n        if (!safeChangeForFieldType(a.type, b.type, !ignoreNullability)) {\n            throw new Error(`Field '${type.name.value}.${a.name.value}' changed type from '${aType}' to '${bType}'`);\n        }\n    }\n    if (isNonNullTypeNode(b.type) && !isNonNullTypeNode(a.type)) {\n        a.type = b.type;\n    }\n    return a;\n}\nfunction safeChangeForFieldType(oldType, newType, ignoreNullability = false) {\n    // both are named\n    if (!isWrappingTypeNode(oldType) && !isWrappingTypeNode(newType)) {\n        return oldType.toString() === newType.toString();\n    }\n    // new is non-null\n    if (isNonNullTypeNode(newType)) {\n        const ofType = isNonNullTypeNode(oldType) ? oldType.type : oldType;\n        return safeChangeForFieldType(ofType, newType.type);\n    }\n    // old is non-null\n    if (isNonNullTypeNode(oldType)) {\n        return safeChangeForFieldType(newType, oldType, ignoreNullability);\n    }\n    // old is list\n    if (isListTypeNode(oldType)) {\n        return ((isListTypeNode(newType) && safeChangeForFieldType(oldType.type, newType.type)) ||\n            (isNonNullTypeNode(newType) && safeChangeForFieldType(oldType, newType['type'])));\n    }\n    return false;\n}\n","import { Kind, } from 'graphql';\nimport { mergeDirectives } from './directives.js';\nimport { mergeFields } from './fields.js';\nexport function mergeInputType(node, existingNode, config, directives) {\n    if (existingNode) {\n        try {\n            return {\n                name: node.name,\n                description: node['description'] || existingNode['description'],\n                kind: config?.convertExtensions ||\n                    node.kind === 'InputObjectTypeDefinition' ||\n                    existingNode.kind === 'InputObjectTypeDefinition'\n                    ? 'InputObjectTypeDefinition'\n                    : 'InputObjectTypeExtension',\n                loc: node.loc,\n                fields: mergeFields(node, node.fields, existingNode.fields, config),\n                directives: mergeDirectives(node.directives, existingNode.directives, config, directives),\n            };\n        }\n        catch (e) {\n            throw new Error(`Unable to merge GraphQL input type \"${node.name.value}\": ${e.message}`);\n        }\n    }\n    return config?.convertExtensions\n        ? {\n            ...node,\n            kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n        }\n        : node;\n}\n","import { compareNodes } from '@graphql-tools/utils';\nfunction alreadyExists(arr, other) {\n    return !!arr.find(i => i.name.value === other.name.value);\n}\nexport function mergeNamedTypeArray(first = [], second = [], config = {}) {\n    const result = [...second, ...first.filter(d => !alreadyExists(second, d))];\n    if (config && config.sort) {\n        result.sort(compareNodes);\n    }\n    return result;\n}\n","import { Kind, } from 'graphql';\nimport { mergeDirectives } from './directives.js';\nimport { mergeFields } from './fields.js';\nimport { mergeNamedTypeArray } from './merge-named-type-array.js';\nexport function mergeInterface(node, existingNode, config, directives) {\n    if (existingNode) {\n        try {\n            return {\n                name: node.name,\n                description: node['description'] || existingNode['description'],\n                kind: config?.convertExtensions ||\n                    node.kind === 'InterfaceTypeDefinition' ||\n                    existingNode.kind === 'InterfaceTypeDefinition'\n                    ? 'InterfaceTypeDefinition'\n                    : 'InterfaceTypeExtension',\n                loc: node.loc,\n                fields: mergeFields(node, node.fields, existingNode.fields, config),\n                directives: mergeDirectives(node.directives, existingNode.directives, config, directives),\n                interfaces: node['interfaces']\n                    ? mergeNamedTypeArray(node['interfaces'], existingNode['interfaces'], config)\n                    : undefined,\n            };\n        }\n        catch (e) {\n            throw new Error(`Unable to merge GraphQL interface \"${node.name.value}\": ${e.message}`);\n        }\n    }\n    return config?.convertExtensions\n        ? {\n            ...node,\n            kind: Kind.INTERFACE_TYPE_DEFINITION,\n        }\n        : node;\n}\n","import { Kind, } from 'graphql';\nimport { mergeDirectives } from './directives.js';\nexport function mergeScalar(node, existingNode, config, directives) {\n    if (existingNode) {\n        return {\n            name: node.name,\n            description: node['description'] || existingNode['description'],\n            kind: config?.convertExtensions ||\n                node.kind === 'ScalarTypeDefinition' ||\n                existingNode.kind === 'ScalarTypeDefinition'\n                ? 'ScalarTypeDefinition'\n                : 'ScalarTypeExtension',\n            loc: node.loc,\n            directives: mergeDirectives(node.directives, existingNode.directives, config, directives),\n        };\n    }\n    return config?.convertExtensions\n        ? {\n            ...node,\n            kind: Kind.SCALAR_TYPE_DEFINITION,\n        }\n        : node;\n}\n","import { Kind, } from 'graphql';\nimport { mergeDirectives } from './directives.js';\nexport const DEFAULT_OPERATION_TYPE_NAME_MAP = {\n    query: 'Query',\n    mutation: 'Mutation',\n    subscription: 'Subscription',\n};\nfunction mergeOperationTypes(opNodeList = [], existingOpNodeList = []) {\n    const finalOpNodeList = [];\n    for (const opNodeType in DEFAULT_OPERATION_TYPE_NAME_MAP) {\n        const opNode = opNodeList.find(n => n.operation === opNodeType) ||\n            existingOpNodeList.find(n => n.operation === opNodeType);\n        if (opNode) {\n            finalOpNodeList.push(opNode);\n        }\n    }\n    return finalOpNodeList;\n}\nexport function mergeSchemaDefs(node, existingNode, config, directives) {\n    if (existingNode) {\n        return {\n            kind: node.kind === Kind.SCHEMA_DEFINITION || existingNode.kind === Kind.SCHEMA_DEFINITION\n                ? Kind.SCHEMA_DEFINITION\n                : Kind.SCHEMA_EXTENSION,\n            description: node['description'] || existingNode['description'],\n            directives: mergeDirectives(node.directives, existingNode.directives, config, directives),\n            operationTypes: mergeOperationTypes(node.operationTypes, existingNode.operationTypes),\n        };\n    }\n    return (config?.convertExtensions\n        ? {\n            ...node,\n            kind: Kind.SCHEMA_DEFINITION,\n        }\n        : node);\n}\n","import { Kind, } from 'graphql';\nimport { mergeDirectives } from './directives.js';\nimport { mergeFields } from './fields.js';\nimport { mergeNamedTypeArray } from './merge-named-type-array.js';\nexport function mergeType(node, existingNode, config, directives) {\n    if (existingNode) {\n        try {\n            return {\n                name: node.name,\n                description: node['description'] || existingNode['description'],\n                kind: config?.convertExtensions ||\n                    node.kind === 'ObjectTypeDefinition' ||\n                    existingNode.kind === 'ObjectTypeDefinition'\n                    ? 'ObjectTypeDefinition'\n                    : 'ObjectTypeExtension',\n                loc: node.loc,\n                fields: mergeFields(node, node.fields, existingNode.fields, config),\n                directives: mergeDirectives(node.directives, existingNode.directives, config, directives),\n                interfaces: mergeNamedTypeArray(node.interfaces, existingNode.interfaces, config),\n            };\n        }\n        catch (e) {\n            throw new Error(`Unable to merge GraphQL type \"${node.name.value}\": ${e.message}`);\n        }\n    }\n    return config?.convertExtensions\n        ? {\n            ...node,\n            kind: Kind.OBJECT_TYPE_DEFINITION,\n        }\n        : node;\n}\n","import { Kind, } from 'graphql';\nimport { mergeDirectives } from './directives.js';\nimport { mergeNamedTypeArray } from './merge-named-type-array.js';\nexport function mergeUnion(first, second, config, directives) {\n    if (second) {\n        return {\n            name: first.name,\n            description: first['description'] || second['description'],\n            // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n            directives: mergeDirectives(first.directives, second.directives, config, directives),\n            kind: config?.convertExtensions ||\n                first.kind === 'UnionTypeDefinition' ||\n                second.kind === 'UnionTypeDefinition'\n                ? Kind.UNION_TYPE_DEFINITION\n                : Kind.UNION_TYPE_EXTENSION,\n            loc: first.loc,\n            types: mergeNamedTypeArray(first.types, second.types, config),\n        };\n    }\n    return config?.convertExtensions\n        ? {\n            ...first,\n            kind: Kind.UNION_TYPE_DEFINITION,\n        }\n        : first;\n}\n","import { Kind, } from 'graphql';\nimport { isNode } from 'graphql/language/ast.js';\nimport { collectComment } from '@graphql-tools/utils';\nimport { mergeDirective } from './directives.js';\nimport { mergeEnum } from './enum.js';\nimport { mergeInputType } from './input-type.js';\nimport { mergeInterface } from './interface.js';\nimport { mergeScalar } from './scalar.js';\nimport { mergeSchemaDefs } from './schema-def.js';\nimport { mergeType } from './type.js';\nimport { mergeUnion } from './union.js';\nexport const schemaDefSymbol = 'SCHEMA_DEF_SYMBOL';\nexport function isNamedDefinitionNode(definitionNode) {\n    return 'name' in definitionNode;\n}\nexport function mergeGraphQLNodes(nodes, config, directives = {}) {\n    const mergedResultMap = directives;\n    for (const nodeDefinition of nodes) {\n        if (isNamedDefinitionNode(nodeDefinition)) {\n            const name = nodeDefinition.name?.value;\n            if (config?.commentDescriptions) {\n                collectComment(nodeDefinition);\n            }\n            if (name == null) {\n                continue;\n            }\n            if (config?.exclusions?.includes(name + '.*') || config?.exclusions?.includes(name)) {\n                delete mergedResultMap[name];\n            }\n            else {\n                switch (nodeDefinition.kind) {\n                    case Kind.OBJECT_TYPE_DEFINITION:\n                    case Kind.OBJECT_TYPE_EXTENSION:\n                        mergedResultMap[name] = mergeType(nodeDefinition, mergedResultMap[name], config, directives);\n                        break;\n                    case Kind.ENUM_TYPE_DEFINITION:\n                    case Kind.ENUM_TYPE_EXTENSION:\n                        mergedResultMap[name] = mergeEnum(nodeDefinition, mergedResultMap[name], config, directives);\n                        break;\n                    case Kind.UNION_TYPE_DEFINITION:\n                    case Kind.UNION_TYPE_EXTENSION:\n                        mergedResultMap[name] = mergeUnion(nodeDefinition, mergedResultMap[name], config, directives);\n                        break;\n                    case Kind.SCALAR_TYPE_DEFINITION:\n                    case Kind.SCALAR_TYPE_EXTENSION:\n                        mergedResultMap[name] = mergeScalar(nodeDefinition, mergedResultMap[name], config, directives);\n                        break;\n                    case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n                    case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n                        mergedResultMap[name] = mergeInputType(nodeDefinition, mergedResultMap[name], config, directives);\n                        break;\n                    case Kind.INTERFACE_TYPE_DEFINITION:\n                    case Kind.INTERFACE_TYPE_EXTENSION:\n                        mergedResultMap[name] = mergeInterface(nodeDefinition, mergedResultMap[name], config, directives);\n                        break;\n                    case Kind.DIRECTIVE_DEFINITION:\n                        if (mergedResultMap[name]) {\n                            const isInheritedFromPrototype = name in {}; // i.e. toString\n                            if (isInheritedFromPrototype) {\n                                if (!isNode(mergedResultMap[name])) {\n                                    mergedResultMap[name] = undefined;\n                                }\n                            }\n                        }\n                        mergedResultMap[name] = mergeDirective(nodeDefinition, mergedResultMap[name]);\n                        break;\n                }\n            }\n        }\n        else if (nodeDefinition.kind === Kind.SCHEMA_DEFINITION ||\n            nodeDefinition.kind === Kind.SCHEMA_EXTENSION) {\n            mergedResultMap[schemaDefSymbol] = mergeSchemaDefs(nodeDefinition, mergedResultMap[schemaDefSymbol], config);\n        }\n    }\n    return mergedResultMap;\n}\n","import { isDefinitionNode, isSchema, Kind, parse, } from 'graphql';\nimport { getDocumentNodeFromSchema, isDocumentNode, printWithComments, resetComments, } from '@graphql-tools/utils';\nimport { mergeGraphQLNodes, schemaDefSymbol } from './merge-nodes.js';\nimport { DEFAULT_OPERATION_TYPE_NAME_MAP } from './schema-def.js';\nimport { defaultStringComparator, isSourceTypes, isStringTypes } from './utils.js';\nexport function mergeTypeDefs(typeSource, config) {\n    resetComments();\n    const doc = {\n        kind: Kind.DOCUMENT,\n        definitions: mergeGraphQLTypes(typeSource, {\n            useSchemaDefinition: true,\n            forceSchemaDefinition: false,\n            throwOnConflict: false,\n            commentDescriptions: false,\n            ...config,\n        }),\n    };\n    let result;\n    if (config?.commentDescriptions) {\n        result = printWithComments(doc);\n    }\n    else {\n        result = doc;\n    }\n    resetComments();\n    return result;\n}\nfunction visitTypeSources(typeSource, options, allDirectives = [], allNodes = [], visitedTypeSources = new Set()) {\n    if (typeSource && !visitedTypeSources.has(typeSource)) {\n        visitedTypeSources.add(typeSource);\n        if (typeof typeSource === 'function') {\n            visitTypeSources(typeSource(), options, allDirectives, allNodes, visitedTypeSources);\n        }\n        else if (Array.isArray(typeSource)) {\n            for (const type of typeSource) {\n                visitTypeSources(type, options, allDirectives, allNodes, visitedTypeSources);\n            }\n        }\n        else if (isSchema(typeSource)) {\n            const documentNode = getDocumentNodeFromSchema(typeSource, options);\n            visitTypeSources(documentNode.definitions, options, allDirectives, allNodes, visitedTypeSources);\n        }\n        else if (isStringTypes(typeSource) || isSourceTypes(typeSource)) {\n            const documentNode = parse(typeSource, options);\n            visitTypeSources(documentNode.definitions, options, allDirectives, allNodes, visitedTypeSources);\n        }\n        else if (typeof typeSource === 'object' && isDefinitionNode(typeSource)) {\n            if (typeSource.kind === Kind.DIRECTIVE_DEFINITION) {\n                allDirectives.push(typeSource);\n            }\n            else {\n                allNodes.push(typeSource);\n            }\n        }\n        else if (isDocumentNode(typeSource)) {\n            visitTypeSources(typeSource.definitions, options, allDirectives, allNodes, visitedTypeSources);\n        }\n        else {\n            throw new Error(`typeDefs must contain only strings, documents, schemas, or functions, got ${typeof typeSource}`);\n        }\n    }\n    return { allDirectives, allNodes };\n}\nexport function mergeGraphQLTypes(typeSource, config) {\n    resetComments();\n    const { allDirectives, allNodes } = visitTypeSources(typeSource, config);\n    const mergedDirectives = mergeGraphQLNodes(allDirectives, config);\n    const mergedNodes = mergeGraphQLNodes(allNodes, config, mergedDirectives);\n    if (config?.useSchemaDefinition) {\n        // XXX: right now we don't handle multiple schema definitions\n        const schemaDef = mergedNodes[schemaDefSymbol] || {\n            kind: Kind.SCHEMA_DEFINITION,\n            operationTypes: [],\n        };\n        const operationTypes = schemaDef.operationTypes;\n        for (const opTypeDefNodeType in DEFAULT_OPERATION_TYPE_NAME_MAP) {\n            const opTypeDefNode = operationTypes.find(operationType => operationType.operation === opTypeDefNodeType);\n            if (!opTypeDefNode) {\n                const possibleRootTypeName = DEFAULT_OPERATION_TYPE_NAME_MAP[opTypeDefNodeType];\n                const existingPossibleRootType = mergedNodes[possibleRootTypeName];\n                if (existingPossibleRootType != null && existingPossibleRootType.name != null) {\n                    operationTypes.push({\n                        kind: Kind.OPERATION_TYPE_DEFINITION,\n                        type: {\n                            kind: Kind.NAMED_TYPE,\n                            name: existingPossibleRootType.name,\n                        },\n                        operation: opTypeDefNodeType,\n                    });\n                }\n            }\n        }\n        if (schemaDef?.operationTypes?.length != null && schemaDef.operationTypes.length > 0) {\n            mergedNodes[schemaDefSymbol] = schemaDef;\n        }\n    }\n    if (config?.forceSchemaDefinition && !mergedNodes[schemaDefSymbol]?.operationTypes?.length) {\n        mergedNodes[schemaDefSymbol] = {\n            kind: Kind.SCHEMA_DEFINITION,\n            operationTypes: [\n                {\n                    kind: Kind.OPERATION_TYPE_DEFINITION,\n                    operation: 'query',\n                    type: {\n                        kind: Kind.NAMED_TYPE,\n                        name: {\n                            kind: Kind.NAME,\n                            value: 'Query',\n                        },\n                    },\n                },\n            ],\n        };\n    }\n    const mergedNodeDefinitions = Object.values(mergedNodes);\n    if (config?.sort) {\n        const sortFn = typeof config.sort === 'function' ? config.sort : defaultStringComparator;\n        mergedNodeDefinitions.sort((a, b) => sortFn(a.name?.value, b.name?.value));\n    }\n    return mergedNodeDefinitions;\n}\n","import { Kind } from 'graphql';\nexport function isDocumentNode(object) {\n    return object && typeof object === 'object' && 'kind' in object && object.kind === Kind.DOCUMENT;\n}\n","/** @private */\nexport function extendedTypeof(val) {\n    if (val === null) {\n        return 'null';\n    }\n    if (Array.isArray(val)) {\n        return 'array';\n    }\n    return typeof val;\n}\n/** @private */\nexport function isObject(val) {\n    return extendedTypeof(val) === 'object';\n}\n/** @private */\nexport function isAsyncIterable(val) {\n    return typeof Object(val)[Symbol.asyncIterator] === 'function';\n}\n/** @private */\nexport function isAsyncGenerator(val) {\n    return (isObject(val) &&\n        typeof Object(val)[Symbol.asyncIterator] === 'function' &&\n        typeof val.return === 'function'\n    // for lazy ones, we only need the return anyway\n    // typeof val.throw === 'function' &&\n    // typeof val.next === 'function'\n    );\n}\n/** @private */\nexport function areGraphQLErrors(obj) {\n    return (Array.isArray(obj) &&\n        // must be at least one error\n        obj.length > 0 &&\n        // error has at least a message\n        obj.every((ob) => 'message' in ob));\n}\n/**\n * Limits the WebSocket close event reason to not exceed a length of one frame.\n * Reference: https://datatracker.ietf.org/doc/html/rfc6455#section-5.2.\n *\n * @private\n */\nexport function limitCloseReason(reason, whenTooLong) {\n    return reason.length < 124 ? reason : whenTooLong;\n}\n","/**\n *\n * common\n *\n */\nimport { areGraphQLErrors, extendedTypeof, isObject } from './utils.mjs';\n/**\n * The WebSocket sub-protocol used for the [GraphQL over WebSocket Protocol](https://github.com/graphql/graphql-over-http/blob/main/rfcs/GraphQLOverWebSocket.md).\n *\n * @category Common\n */\nexport const GRAPHQL_TRANSPORT_WS_PROTOCOL = 'graphql-transport-ws';\n/**\n * The deprecated subprotocol used by [subscriptions-transport-ws](https://github.com/apollographql/subscriptions-transport-ws).\n *\n * @private\n */\nexport const DEPRECATED_GRAPHQL_WS_PROTOCOL = 'graphql-ws';\n/**\n * `graphql-ws` expected and standard close codes of the [GraphQL over WebSocket Protocol](https://github.com/graphql/graphql-over-http/blob/main/rfcs/GraphQLOverWebSocket.md).\n *\n * @category Common\n */\nexport var CloseCode;\n(function (CloseCode) {\n    CloseCode[CloseCode[\"InternalServerError\"] = 4500] = \"InternalServerError\";\n    CloseCode[CloseCode[\"InternalClientError\"] = 4005] = \"InternalClientError\";\n    CloseCode[CloseCode[\"BadRequest\"] = 4400] = \"BadRequest\";\n    CloseCode[CloseCode[\"BadResponse\"] = 4004] = \"BadResponse\";\n    /** Tried subscribing before connect ack */\n    CloseCode[CloseCode[\"Unauthorized\"] = 4401] = \"Unauthorized\";\n    CloseCode[CloseCode[\"Forbidden\"] = 4403] = \"Forbidden\";\n    CloseCode[CloseCode[\"SubprotocolNotAcceptable\"] = 4406] = \"SubprotocolNotAcceptable\";\n    CloseCode[CloseCode[\"ConnectionInitialisationTimeout\"] = 4408] = \"ConnectionInitialisationTimeout\";\n    CloseCode[CloseCode[\"ConnectionAcknowledgementTimeout\"] = 4504] = \"ConnectionAcknowledgementTimeout\";\n    /** Subscriber distinction is very important */\n    CloseCode[CloseCode[\"SubscriberAlreadyExists\"] = 4409] = \"SubscriberAlreadyExists\";\n    CloseCode[CloseCode[\"TooManyInitialisationRequests\"] = 4429] = \"TooManyInitialisationRequests\";\n})(CloseCode || (CloseCode = {}));\n/**\n * Types of messages allowed to be sent by the client/server over the WS protocol.\n *\n * @category Common\n */\nexport var MessageType;\n(function (MessageType) {\n    MessageType[\"ConnectionInit\"] = \"connection_init\";\n    MessageType[\"ConnectionAck\"] = \"connection_ack\";\n    MessageType[\"Ping\"] = \"ping\";\n    MessageType[\"Pong\"] = \"pong\";\n    MessageType[\"Subscribe\"] = \"subscribe\";\n    MessageType[\"Next\"] = \"next\";\n    MessageType[\"Error\"] = \"error\";\n    MessageType[\"Complete\"] = \"complete\";\n})(MessageType || (MessageType = {}));\n/**\n * Validates the message against the GraphQL over WebSocket Protocol.\n *\n * Invalid messages will throw descriptive errors.\n *\n * @category Common\n */\nexport function validateMessage(val) {\n    if (!isObject(val)) {\n        throw new Error(`Message is expected to be an object, but got ${extendedTypeof(val)}`);\n    }\n    if (!val.type) {\n        throw new Error(`Message is missing the 'type' property`);\n    }\n    if (typeof val.type !== 'string') {\n        throw new Error(`Message is expects the 'type' property to be a string, but got ${extendedTypeof(val.type)}`);\n    }\n    switch (val.type) {\n        case MessageType.ConnectionInit:\n        case MessageType.ConnectionAck:\n        case MessageType.Ping:\n        case MessageType.Pong: {\n            if (val.payload != null && !isObject(val.payload)) {\n                throw new Error(`\"${val.type}\" message expects the 'payload' property to be an object or nullish or missing, but got \"${val.payload}\"`);\n            }\n            break;\n        }\n        case MessageType.Subscribe: {\n            if (typeof val.id !== 'string') {\n                throw new Error(`\"${val.type}\" message expects the 'id' property to be a string, but got ${extendedTypeof(val.id)}`);\n            }\n            if (!val.id) {\n                throw new Error(`\"${val.type}\" message requires a non-empty 'id' property`);\n            }\n            if (!isObject(val.payload)) {\n                throw new Error(`\"${val.type}\" message expects the 'payload' property to be an object, but got ${extendedTypeof(val.payload)}`);\n            }\n            if (typeof val.payload.query !== 'string') {\n                throw new Error(`\"${val.type}\" message payload expects the 'query' property to be a string, but got ${extendedTypeof(val.payload.query)}`);\n            }\n            if (val.payload.variables != null && !isObject(val.payload.variables)) {\n                throw new Error(`\"${val.type}\" message payload expects the 'variables' property to be a an object or nullish or missing, but got ${extendedTypeof(val.payload.variables)}`);\n            }\n            if (val.payload.operationName != null &&\n                extendedTypeof(val.payload.operationName) !== 'string') {\n                throw new Error(`\"${val.type}\" message payload expects the 'operationName' property to be a string or nullish or missing, but got ${extendedTypeof(val.payload.operationName)}`);\n            }\n            if (val.payload.extensions != null && !isObject(val.payload.extensions)) {\n                throw new Error(`\"${val.type}\" message payload expects the 'extensions' property to be a an object or nullish or missing, but got ${extendedTypeof(val.payload.extensions)}`);\n            }\n            break;\n        }\n        case MessageType.Next: {\n            if (typeof val.id !== 'string') {\n                throw new Error(`\"${val.type}\" message expects the 'id' property to be a string, but got ${extendedTypeof(val.id)}`);\n            }\n            if (!val.id) {\n                throw new Error(`\"${val.type}\" message requires a non-empty 'id' property`);\n            }\n            if (!isObject(val.payload)) {\n                throw new Error(`\"${val.type}\" message expects the 'payload' property to be an object, but got ${extendedTypeof(val.payload)}`);\n            }\n            break;\n        }\n        case MessageType.Error: {\n            if (typeof val.id !== 'string') {\n                throw new Error(`\"${val.type}\" message expects the 'id' property to be a string, but got ${extendedTypeof(val.id)}`);\n            }\n            if (!val.id) {\n                throw new Error(`\"${val.type}\" message requires a non-empty 'id' property`);\n            }\n            if (!areGraphQLErrors(val.payload)) {\n                throw new Error(`\"${val.type}\" message expects the 'payload' property to be an array of GraphQL errors, but got ${JSON.stringify(val.payload)}`);\n            }\n            break;\n        }\n        case MessageType.Complete: {\n            if (typeof val.id !== 'string') {\n                throw new Error(`\"${val.type}\" message expects the 'id' property to be a string, but got ${extendedTypeof(val.id)}`);\n            }\n            if (!val.id) {\n                throw new Error(`\"${val.type}\" message requires a non-empty 'id' property`);\n            }\n            break;\n        }\n        default:\n            throw new Error(`Invalid message 'type' property \"${val.type}\"`);\n    }\n    return val;\n}\n/**\n * Checks if the provided value is a valid GraphQL over WebSocket message.\n *\n * @deprecated Use `validateMessage` instead.\n *\n * @category Common\n */\nexport function isMessage(val) {\n    try {\n        validateMessage(val);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n/**\n * Parses the raw websocket message data to a valid message.\n *\n * @category Common\n */\nexport function parseMessage(data, reviver) {\n    return validateMessage(typeof data === 'string' ? JSON.parse(data, reviver) : data);\n}\n/**\n * Stringifies a valid message ready to be sent through the socket.\n *\n * @category Common\n */\nexport function stringifyMessage(msg, replacer) {\n    validateMessage(msg);\n    return JSON.stringify(msg, replacer);\n}\n","/**\n *\n * server\n *\n */\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport { parse, validate as graphqlValidate, execute as graphqlExecute, subscribe as graphqlSubscribe, getOperationAST, GraphQLError, } from 'graphql';\nimport { GRAPHQL_TRANSPORT_WS_PROTOCOL, CloseCode, MessageType, stringifyMessage, parseMessage, } from './common.mjs';\nimport { isObject, isAsyncGenerator, isAsyncIterable, areGraphQLErrors, } from './utils.mjs';\n/**\n * Makes a Protocol compliant WebSocket GraphQL server. The server\n * is actually an API which is to be used with your favourite WebSocket\n * server library!\n *\n * Read more about the [GraphQL over WebSocket Protocol](https://github.com/graphql/graphql-over-http/blob/main/rfcs/GraphQLOverWebSocket.md).\n *\n * @category Server\n */\nexport function makeServer(options) {\n    const { schema, context, roots, validate, execute, subscribe, connectionInitWaitTimeout = 3000, // 3 seconds\n    onConnect, onDisconnect, onClose, onSubscribe, onOperation, onNext, onError, onComplete, jsonMessageReviver: reviver, jsonMessageReplacer: replacer, } = options;\n    return {\n        opened(socket, extra) {\n            const ctx = {\n                connectionInitReceived: false,\n                acknowledged: false,\n                subscriptions: {},\n                extra,\n            };\n            if (socket.protocol !== GRAPHQL_TRANSPORT_WS_PROTOCOL) {\n                socket.close(CloseCode.SubprotocolNotAcceptable, 'Subprotocol not acceptable');\n                return async (code, reason) => {\n                    /* nothing was set up, just notify the closure */\n                    await (onClose === null || onClose === void 0 ? void 0 : onClose(ctx, code, reason));\n                };\n            }\n            // kick the client off (close socket) if the connection has\n            // not been initialised after the specified wait timeout\n            const connectionInitWait = connectionInitWaitTimeout > 0 && isFinite(connectionInitWaitTimeout)\n                ? setTimeout(() => {\n                    if (!ctx.connectionInitReceived)\n                        socket.close(CloseCode.ConnectionInitialisationTimeout, 'Connection initialisation timeout');\n                }, connectionInitWaitTimeout)\n                : null;\n            socket.onMessage(async function onMessage(data) {\n                var _a, e_1, _b, _c;\n                var _d;\n                let message;\n                try {\n                    message = parseMessage(data, reviver);\n                }\n                catch (err) {\n                    return socket.close(CloseCode.BadRequest, 'Invalid message received');\n                }\n                switch (message.type) {\n                    case MessageType.ConnectionInit: {\n                        if (ctx.connectionInitReceived)\n                            return socket.close(CloseCode.TooManyInitialisationRequests, 'Too many initialisation requests');\n                        // @ts-expect-error: I can write\n                        ctx.connectionInitReceived = true;\n                        if (isObject(message.payload))\n                            // @ts-expect-error: I can write\n                            ctx.connectionParams = message.payload;\n                        const permittedOrPayload = await (onConnect === null || onConnect === void 0 ? void 0 : onConnect(ctx));\n                        if (permittedOrPayload === false)\n                            return socket.close(CloseCode.Forbidden, 'Forbidden');\n                        // we should acknowledge before send to avoid race conditions (like those exampled in https://github.com/enisdenjo/graphql-ws/issues/501)\n                        // even if the send fails/throws, the connection should be closed because its malfunctioning\n                        // @ts-expect-error: I can write\n                        ctx.acknowledged = true;\n                        await socket.send(stringifyMessage(isObject(permittedOrPayload)\n                            ? {\n                                type: MessageType.ConnectionAck,\n                                payload: permittedOrPayload,\n                            }\n                            : {\n                                type: MessageType.ConnectionAck,\n                                // payload is completely absent if not provided\n                            }, replacer));\n                        return;\n                    }\n                    case MessageType.Ping: {\n                        if (socket.onPing)\n                            // if the onPing listener is registered, automatic pong is disabled\n                            return await socket.onPing(message.payload);\n                        await socket.send(stringifyMessage(message.payload\n                            ? { type: MessageType.Pong, payload: message.payload }\n                            : {\n                                type: MessageType.Pong,\n                                // payload is completely absent if not provided\n                            }));\n                        return;\n                    }\n                    case MessageType.Pong:\n                        return await ((_d = socket.onPong) === null || _d === void 0 ? void 0 : _d.call(socket, message.payload));\n                    case MessageType.Subscribe: {\n                        if (!ctx.acknowledged)\n                            return socket.close(CloseCode.Unauthorized, 'Unauthorized');\n                        const { id, payload } = message;\n                        if (id in ctx.subscriptions)\n                            return socket.close(CloseCode.SubscriberAlreadyExists, `Subscriber for ${id} already exists`);\n                        // if this turns out to be a streaming operation, the subscription value\n                        // will change to an `AsyncIterable`, otherwise it will stay as is\n                        ctx.subscriptions[id] = null;\n                        const emit = {\n                            next: async (result, args) => {\n                                let nextMessage = {\n                                    id,\n                                    type: MessageType.Next,\n                                    payload: result,\n                                };\n                                const maybeResult = await (onNext === null || onNext === void 0 ? void 0 : onNext(ctx, nextMessage, args, result));\n                                if (maybeResult)\n                                    nextMessage = Object.assign(Object.assign({}, nextMessage), { payload: maybeResult });\n                                await socket.send(stringifyMessage(nextMessage, replacer));\n                            },\n                            error: async (errors) => {\n                                let errorMessage = {\n                                    id,\n                                    type: MessageType.Error,\n                                    payload: errors,\n                                };\n                                const maybeErrors = await (onError === null || onError === void 0 ? void 0 : onError(ctx, errorMessage, errors));\n                                if (maybeErrors)\n                                    errorMessage = Object.assign(Object.assign({}, errorMessage), { payload: maybeErrors });\n                                await socket.send(stringifyMessage(errorMessage, replacer));\n                            },\n                            complete: async (notifyClient) => {\n                                const completeMessage = {\n                                    id,\n                                    type: MessageType.Complete,\n                                };\n                                await (onComplete === null || onComplete === void 0 ? void 0 : onComplete(ctx, completeMessage));\n                                if (notifyClient)\n                                    await socket.send(stringifyMessage(completeMessage, replacer));\n                            },\n                        };\n                        try {\n                            let execArgs;\n                            const maybeExecArgsOrErrors = await (onSubscribe === null || onSubscribe === void 0 ? void 0 : onSubscribe(ctx, message));\n                            if (maybeExecArgsOrErrors) {\n                                if (areGraphQLErrors(maybeExecArgsOrErrors))\n                                    return id in ctx.subscriptions\n                                        ? await emit.error(maybeExecArgsOrErrors)\n                                        : void 0;\n                                else if (Array.isArray(maybeExecArgsOrErrors))\n                                    throw new Error('Invalid return value from onSubscribe hook, expected an array of GraphQLError objects');\n                                // not errors, is exec args\n                                execArgs = maybeExecArgsOrErrors;\n                            }\n                            else {\n                                // you either provide a schema dynamically through\n                                // `onSubscribe` or you set one up during the server setup\n                                if (!schema)\n                                    throw new Error('The GraphQL schema is not provided');\n                                const args = {\n                                    operationName: payload.operationName,\n                                    document: parse(payload.query),\n                                    variableValues: payload.variables,\n                                };\n                                execArgs = Object.assign(Object.assign({}, args), { schema: typeof schema === 'function'\n                                        ? await schema(ctx, message, args)\n                                        : schema });\n                                const validationErrors = (validate !== null && validate !== void 0 ? validate : graphqlValidate)(execArgs.schema, execArgs.document);\n                                if (validationErrors.length > 0)\n                                    return id in ctx.subscriptions\n                                        ? await emit.error(validationErrors)\n                                        : void 0;\n                            }\n                            const operationAST = getOperationAST(execArgs.document, execArgs.operationName);\n                            if (!operationAST)\n                                return id in ctx.subscriptions\n                                    ? await emit.error([\n                                        new GraphQLError('Unable to identify operation'),\n                                    ])\n                                    : void 0;\n                            // if `onSubscribe` didn't specify a rootValue, inject one\n                            if (!('rootValue' in execArgs))\n                                execArgs.rootValue = roots === null || roots === void 0 ? void 0 : roots[operationAST.operation];\n                            // if `onSubscribe` didn't specify a context, inject one\n                            if (!('contextValue' in execArgs))\n                                execArgs.contextValue =\n                                    typeof context === 'function'\n                                        ? await context(ctx, message, execArgs)\n                                        : context;\n                            // the execution arguments have been prepared\n                            // perform the operation and act accordingly\n                            let operationResult;\n                            if (operationAST.operation === 'subscription')\n                                operationResult = await (subscribe !== null && subscribe !== void 0 ? subscribe : graphqlSubscribe)(execArgs);\n                            // operation === 'query' || 'mutation'\n                            else\n                                operationResult = await (execute !== null && execute !== void 0 ? execute : graphqlExecute)(execArgs);\n                            const maybeResult = await (onOperation === null || onOperation === void 0 ? void 0 : onOperation(ctx, message, execArgs, operationResult));\n                            if (maybeResult)\n                                operationResult = maybeResult;\n                            if (isAsyncIterable(operationResult)) {\n                                /** multiple emitted results */\n                                if (!(id in ctx.subscriptions)) {\n                                    // subscription was completed/canceled before the operation settled\n                                    if (isAsyncGenerator(operationResult))\n                                        operationResult.return(undefined);\n                                }\n                                else {\n                                    ctx.subscriptions[id] = operationResult;\n                                    try {\n                                        for (var _e = true, operationResult_1 = __asyncValues(operationResult), operationResult_1_1; operationResult_1_1 = await operationResult_1.next(), _a = operationResult_1_1.done, !_a; _e = true) {\n                                            _c = operationResult_1_1.value;\n                                            _e = false;\n                                            const result = _c;\n                                            await emit.next(result, execArgs);\n                                        }\n                                    }\n                                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                                    finally {\n                                        try {\n                                            if (!_e && !_a && (_b = operationResult_1.return)) await _b.call(operationResult_1);\n                                        }\n                                        finally { if (e_1) throw e_1.error; }\n                                    }\n                                }\n                            }\n                            else {\n                                /** single emitted result */\n                                // if the client completed the subscription before the single result\n                                // became available, he effectively canceled it and no data should be sent\n                                if (id in ctx.subscriptions)\n                                    await emit.next(operationResult, execArgs);\n                            }\n                            // lack of subscription at this point indicates that the client\n                            // completed the subscription, he doesn't need to be reminded\n                            await emit.complete(id in ctx.subscriptions);\n                        }\n                        finally {\n                            // whatever happens to the subscription, we finally want to get rid of the reservation\n                            delete ctx.subscriptions[id];\n                        }\n                        return;\n                    }\n                    case MessageType.Complete: {\n                        const subscription = ctx.subscriptions[message.id];\n                        delete ctx.subscriptions[message.id]; // deleting the subscription means no further activity should take place\n                        if (isAsyncGenerator(subscription))\n                            await subscription.return(undefined);\n                        return;\n                    }\n                    default:\n                        throw new Error(`Unexpected message of type ${message.type} received`);\n                }\n            });\n            // wait for close, cleanup and the disconnect callback\n            return async (code, reason) => {\n                if (connectionInitWait)\n                    clearTimeout(connectionInitWait);\n                const subs = Object.assign({}, ctx.subscriptions);\n                // @ts-expect-error: I can write\n                ctx.subscriptions = {}; // deleting the subscription means no further activity should take place\n                // we return all iterable subscriptions immediatelly, independant of the order\n                await Promise.all(Object.values(subs)\n                    .filter(isAsyncGenerator)\n                    .map((sub) => sub.return(undefined)));\n                if (ctx.acknowledged)\n                    await (onDisconnect === null || onDisconnect === void 0 ? void 0 : onDisconnect(ctx, code, reason));\n                await (onClose === null || onClose === void 0 ? void 0 : onClose(ctx, code, reason));\n            };\n        },\n    };\n}\n/**\n * Helper utility for choosing the \"graphql-transport-ws\" subprotocol from\n * a set of WebSocket subprotocols.\n *\n * Accepts a set of already extracted WebSocket subprotocols or the raw\n * Sec-WebSocket-Protocol header value. In either case, if the right\n * protocol appears, it will be returned.\n *\n * By specification, the server should not provide a value with Sec-WebSocket-Protocol\n * if it does not agree with client's subprotocols. The client has a responsibility\n * to handle the connection afterwards.\n *\n * @category Server\n */\nexport function handleProtocols(protocols) {\n    switch (true) {\n        case protocols instanceof Set &&\n            protocols.has(GRAPHQL_TRANSPORT_WS_PROTOCOL):\n        case Array.isArray(protocols) &&\n            protocols.includes(GRAPHQL_TRANSPORT_WS_PROTOCOL):\n        case typeof protocols === 'string' &&\n            protocols\n                .split(',')\n                .map((p) => p.trim())\n                .includes(GRAPHQL_TRANSPORT_WS_PROTOCOL):\n            return GRAPHQL_TRANSPORT_WS_PROTOCOL;\n        default:\n            return false;\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"path\");","export let users = [\r\n    { id: '1', name: 'John Doe', email: 'john@example.com' },\r\n    { id: '2', name: 'Jane Smith', email: 'jane@example.com' }\r\n  ];","// server/resolvers/queryResolvers.js   \r\nimport { users } from \"../_db.js\";\r\nexport const queryResolvers = {  \r\n    Query: {\r\n      hello: () => 'world',\r\n      users: () => users,\r\n    user: (parent, { id }) => users.find(user => user.id === id)    \r\n    },\r\n  };\r\n  ","// server/resolvers/mutationResolvers.js\r\nimport { users } from \"../_db.js\";\r\nimport { PubSub } from 'graphql-subscriptions';\r\nconst pubsub = new PubSub(); // Create an instance of PubSub\r\nexport const mutationResolvers = {\r\n  Mutation: {\r\n    createUser: (parent, { input }) => {\r\n      const newUser = { id: String(users.length + 1), ...input };\r\n      users.push(newUser);\r\n      return { user: newUser, msg: `user added successfully` };\r\n    },\r\n    updateUser: (parent, { id, input }) => {\r\n      const index = users.findIndex(user => user.id === id);\r\n      if (index !== -1) {\r\n        if (input.name) users[index].name = input.name;\r\n        if (input.email) users[index].email = input.email;\r\n        return { user: users[index], msg: 'User updated successfully ' };\r\n      }\r\n      return { msg: `Invalid userID` };\r\n    },\r\n    deleteUser: (parent, { id }) => {\r\n      const index = users.findIndex(user => user.id === id);\r\n      if (index !== -1) {\r\n        const deletedUser = users.splice(index, 1)[0];\r\n        pubsub.publish('USER_DELETED', { userDeleted: deletedUser });\r\n        return {\r\n          id: deletedUser.id,\r\n          success: true,\r\n          message: `user deleted successfully`\r\n\r\n        }\r\n      }\r\n      return {\r\n        id,\r\n        success: false,\r\n        message: 'User not found',\r\n      };\r\n    }\r\n  },\r\n  Subscription: {\r\n    userDeleted: {\r\n      subscribe: () => pubsub.asyncIterator(['USER_DELETED'])\r\n    },\r\n    greetings: {\r\n      subscribe: () => pubsub.asyncIterator(['GREETINGS'])\r\n    }\r\n  }\r\n};\r\n\r\nsetInterval(() => {\r\n  pubsub.publish('GREETINGS', { greetings: 'Hello, World!' });\r\n}, 5000);\r\n\r\n\r\n// const resolvers = {\r\n//   Query: {\r\n//     users: () => users,\r\n//     user: (parent, { id }) => users.find(user => user.id === id),\r\n//   },\r\n//   Mutation: {\r\n//     createUser: (parent, { input }) => {\r\n//       const newUser = { id: uuidv4(), ...input };\r\n//       users.push(newUser);\r\n//       return newUser;\r\n//     },\r\n//     updateUser: (parent, { id, input }) => {\r\n//       const index = users.findIndex(user => user.id === id);\r\n//       if (index !== -1) {\r\n//         if (input.name) users[index].name = input.name;\r\n//         if (input.email) users[index].email = input.email;\r\n//         return users[index];\r\n//       }\r\n//       return null; // or throw an error if preferred\r\n//     },\r\n//     deleteUser: (parent, { id }) => {\r\n//       const userIndex = users.findIndex(user => user.id === id);\r\n//       if (userIndex === -1) {\r\n//         return {\r\n//           id,\r\n//           success: false,\r\n//           message: 'User not found',\r\n//         };\r\n//       }\r\n//       const deletedUser = users.splice(userIndex, 1)[0];\r\n//       return {\r\n//         id: deletedUser.id,\r\n//         success: true,\r\n//         message: 'User successfully deleted',\r\n//       };\r\n//     },\r\n//   },\r\n// };\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"graphql-subscriptions\");","// import express from 'express'\r\n// import 'colors'\r\n// import cors from 'cors'\r\n// import { createSchema, createYoga } from 'graphql-yoga';\r\n// // server/schema/index.js\r\n// import { loadFilesSync } from '@graphql-tools/load-files';\r\n// import { mergeTypeDefs } from '@graphql-tools/merge';\r\n\r\n// const typesArray = loadFilesSync('./schema/typeDefs', { extensions: ['gql', 'graphql'] });\r\n// export const typeDefs = mergeTypeDefs(typesArray);\r\n// import { queryResolvers } from './resolvers/queryResolvers.js';\r\n// import { mutationResolvers } from './resolvers/mutationResolvers.js';\r\n// import { fileURLToPath } from 'url';\r\n// import { dirname, join } from 'path';\r\n// import path from 'path'\r\n// import { users } from './_db.js';\r\n// const resolvers = {\r\n//   ...queryResolvers,\r\n//   ...mutationResolvers,\r\n// };\r\n\r\n// // Define your GraphQL schema\r\n// const schema = createSchema({\r\n//   typeDefs,\r\n//   resolvers,\r\n// });\r\n\r\n// // Create a Yoga instance with the GraphQL schema\r\n// const yoga = createYoga({\r\n//   graphqlEndpoint: '/graphql',\r\n//   schema,\r\n//   graphiql: true,\r\n// });\r\n\r\n// // Initialize Express app\r\n// const app = express();\r\n// app.use(cors())\r\n\r\n\r\n// // Resolve __dirname and __filename using import.meta.url \r\n// // const __filename = fileURLToPath(import.meta.url);\r\n// // const __dirname = dirname(__filename);\r\n// const __dirname = path.resolve(); /// sarvas...// \r\n\r\n// // Serve static files from the React app\r\n// const clientBuildPath = join(__dirname, 'client', 'dist');\r\n// app.use(express.static(clientBuildPath)); \r\n\r\n// // Handle SPA routing, return index.html for all unknown routes \r\n// app.get('*', (req, res, next) => {\r\n//   if (req.path.startsWith('/graphql') || req.path === '/restapi') { \r\n//     return next();\r\n//   }\r\n//    res.sendFile(join(clientBuildPath, 'index.html'));\r\n//   //res.redirect('/graphql')\r\n// });\r\n// // Use Yoga as a middleware in Express\r\n// app.use('/graphql', yoga);\r\n\r\n// // Define other specific routes\r\n// app.get('/restapi', (req, res) => {\r\n//   // Handle /submit route\r\n//   res.status(200).json({ users });\r\n// });\r\n\r\n// // DELETE endpoint to delete a user by ID\r\n// app.delete('/restapi/:id', (req, res) => {\r\n//   const { id } = req.params; // Get the id parameter from the request URL \r\n\r\n//   // Find the index of the user with the given id\r\n//   const index = users.findIndex(user => user.id === id);\r\n\r\n//   if (index !== -1) {\r\n//     // User found, delete it from the array\r\n//     users.splice(index, 1);\r\n//     return res.json({ msg: `User with id ${id} deleted successfully` });\r\n//   } else {\r\n//     // User not found\r\n//     return res.status(404).json({ msg: `User with id ${id} not found` });\r\n//   }\r\n// });\r\n\r\n// //const HOST = '192.168.2.149'\r\n// // Define a port and start the server\r\n// const PORT = process.env.PORT || 4000;\r\n// app.listen(PORT, () => {\r\n//   //console.log(`Server is running on http://${HOST}:${PORT}/graphql`.america);\r\n//   console.log(`Server is active on Port ${PORT}`)\r\n// });\r\n\r\nimport express from 'express';\r\nimport 'colors';\r\nimport cors from 'cors';\r\nimport { createSchema, createYoga } from 'graphql-yoga';\r\nimport { loadFilesSync } from '@graphql-tools/load-files';\r\nimport { mergeTypeDefs } from '@graphql-tools/merge';\r\nimport { WebSocketServer } from 'ws';\r\nimport { useServer } from 'graphql-ws/lib/use/ws';\r\nimport path, { join } from 'path';\r\nimport { users } from './_db.js';\r\nimport { queryResolvers } from './resolvers/queryResolvers.js';\r\nimport { mutationResolvers } from './resolvers/mutationResolvers.js';\r\n\r\n// Load and merge type definitions\r\nconst typesArray = loadFilesSync('./schema/typeDefs', { extensions: ['gql', 'graphql'] });\r\nconst typeDefs = mergeTypeDefs(typesArray);\r\n\r\n// Define resolvers\r\nconst resolvers = {\r\n  ...queryResolvers,\r\n  ...mutationResolvers,\r\n};\r\n\r\n// Define your GraphQL schema\r\nconst schema = createSchema({\r\n  typeDefs,\r\n  resolvers,\r\n});\r\n\r\n// Create a Yoga instance with the GraphQL schema     \r\nconst yoga = createYoga({\r\n  graphqlEndpoint: '/graphql',\r\n  schema,\r\n  graphiql: {\r\n    subscriptionsProtocol: 'WS',\r\n  },\r\n});\r\n\r\n// Initialize Express app\r\nconst app = express();\r\napp.use(cors());\r\n\r\n// Resolve __dirname using import.meta.url\r\nconst __dirname = path.resolve();\r\n\r\n// Serve static files from the React app\r\nconst clientBuildPath = join(__dirname, 'client', 'dist');\r\napp.use(express.static(clientBuildPath));\r\n\r\n// Handle SPA routing, return index.html for all unknown routes\r\napp.get('*', (req, res, next) => {\r\n  if (req.path.startsWith('/graphql') || req.path === '/restapi') {\r\n    return next();\r\n  }\r\n  res.sendFile(join(clientBuildPath, 'index.html'));\r\n});\r\n\r\n// Use Yoga as a middleware in Express\r\napp.use('/graphql', yoga);\r\n\r\n// Define other specific routes\r\napp.get('/restapi', (req, res) => {\r\n  res.status(200).json({ users });\r\n});\r\n\r\n// DELETE endpoint to delete a user by ID\r\napp.delete('/restapi/:id', (req, res) => {\r\n  const { id } = req.params; // Get the id parameter from the request URL\r\n  const index = users.findIndex(user => user.id === id);\r\n\r\n  if (index !== -1) {\r\n    users.splice(index, 1);\r\n    return res.json({ msg: `User with id ${id} deleted successfully` });\r\n  } else {\r\n    return res.status(404).json({ msg: `User with id ${id} not found` });\r\n  }\r\n});\r\n\r\n// Create WebSocket server instance from our Express server\r\nconst wsServer = new WebSocketServer({\r\n  noServer: true,\r\n  path: yoga.graphqlEndpoint,\r\n});\r\n\r\n// Integrate Yoga's Envelop instance and NodeJS server with graphql-ws\r\nuseServer(\r\n  {\r\n    execute: (args) => args.rootValue.execute(args),\r\n    subscribe: (args) => args.rootValue.subscribe(args),\r\n    onSubscribe: async (ctx, msg) => {\r\n      const { schema, execute, subscribe, contextFactory, parse, validate } = yoga.getEnveloped({\r\n        ...ctx,\r\n        req: ctx.extra.request,\r\n        socket: ctx.extra.socket,\r\n        params: msg.payload,\r\n      });\r\n\r\n      const args = {\r\n        schema,\r\n        operationName: msg.payload.operationName,\r\n        document: parse(msg.payload.query),\r\n        variableValues: msg.payload.variables,\r\n        contextValue: await contextFactory(),\r\n        rootValue: {\r\n          execute,\r\n          subscribe,\r\n        },\r\n      };\r\n\r\n      const errors = validate(args.schema, args.document);\r\n      if (errors.length) return errors;\r\n      return args;\r\n    },\r\n  },\r\n  wsServer\r\n);\r\n\r\n// Define a port and start the server\r\nconst PORT = process.env.PORT || 4000;\r\nconst server = app.listen(PORT, () => {\r\n  console.log(`Server is active on port ${PORT}`);\r\n});\r\n\r\n// Handle upgrade requests to integrate WebSocket server with Express\r\nserver.on('upgrade', (request, socket, head) => {\r\n  wsServer.handleUpgrade(request, socket, head, (ws) => {\r\n    wsServer.emit('connection', ws, request);\r\n  });\r\n});\r\n","import { handleProtocols, makeServer } from '../server.mjs';\nimport { DEPRECATED_GRAPHQL_WS_PROTOCOL, CloseCode, } from '../common.mjs';\nimport { limitCloseReason } from '../utils.mjs';\n/**\n * Use the server on a [ws](https://github.com/websockets/ws) ws server.\n * This is a basic starter, feel free to copy the code over and adjust it to your needs\n *\n * @category Server/ws\n */\nexport function useServer(options, ws, \n/**\n * The timeout between dispatched keep-alive messages. Internally uses the [ws Ping and Pongs]((https://developer.mozilla.org/en-US/docs/Web/API/wss_API/Writing_ws_servers#Pings_and_Pongs_The_Heartbeat_of_wss))\n * to check that the link between the clients and the server is operating and to prevent the link\n * from being broken due to idling.\n *\n * @default 12_000 // 12 seconds\n */\nkeepAlive = 12000) {\n    const isProd = process.env.NODE_ENV === 'production';\n    const server = makeServer(options);\n    ws.options.handleProtocols = handleProtocols;\n    ws.once('error', (err) => {\n        console.error('Internal error emitted on the WebSocket server. ' +\n            'Please check your implementation.', err);\n        // catch the first thrown error and re-throw it once all clients have been notified\n        let firstErr = null;\n        // report server errors by erroring out all clients with the same error\n        for (const client of ws.clients) {\n            try {\n                client.close(CloseCode.InternalServerError, isProd\n                    ? 'Internal server error'\n                    : limitCloseReason(err instanceof Error ? err.message : String(err), 'Internal server error'));\n            }\n            catch (err) {\n                firstErr = firstErr !== null && firstErr !== void 0 ? firstErr : err;\n            }\n        }\n        if (firstErr)\n            throw firstErr;\n    });\n    ws.on('connection', (socket, request) => {\n        socket.once('error', (err) => {\n            console.error('Internal error emitted on a WebSocket socket. ' +\n                'Please check your implementation.', err);\n            socket.close(CloseCode.InternalServerError, isProd\n                ? 'Internal server error'\n                : limitCloseReason(err instanceof Error ? err.message : String(err), 'Internal server error'));\n        });\n        // keep alive through ping-pong messages\n        let pongWait = null;\n        const pingInterval = keepAlive > 0 && isFinite(keepAlive)\n            ? setInterval(() => {\n                // ping pong on open sockets only\n                if (socket.readyState === socket.OPEN) {\n                    // terminate the connection after pong wait has passed because the client is idle\n                    pongWait = setTimeout(() => {\n                        socket.terminate();\n                    }, keepAlive);\n                    // listen for client's pong and stop socket termination\n                    socket.once('pong', () => {\n                        if (pongWait) {\n                            clearTimeout(pongWait);\n                            pongWait = null;\n                        }\n                    });\n                    socket.ping();\n                }\n            }, keepAlive)\n            : null;\n        const closed = server.opened({\n            protocol: socket.protocol,\n            send: (data) => new Promise((resolve, reject) => {\n                if (socket.readyState !== socket.OPEN)\n                    return resolve();\n                socket.send(data, (err) => (err ? reject(err) : resolve()));\n            }),\n            close: (code, reason) => socket.close(code, reason),\n            onMessage: (cb) => socket.on('message', async (event) => {\n                try {\n                    await cb(String(event));\n                }\n                catch (err) {\n                    console.error('Internal error occurred during message handling. ' +\n                        'Please check your implementation.', err);\n                    socket.close(CloseCode.InternalServerError, isProd\n                        ? 'Internal server error'\n                        : limitCloseReason(err instanceof Error ? err.message : String(err), 'Internal server error'));\n                }\n            }),\n        }, { socket, request });\n        socket.once('close', (code, reason) => {\n            if (pongWait)\n                clearTimeout(pongWait);\n            if (pingInterval)\n                clearInterval(pingInterval);\n            if (!isProd &&\n                code === CloseCode.SubprotocolNotAcceptable &&\n                socket.protocol === DEPRECATED_GRAPHQL_WS_PROTOCOL)\n                console.warn(`Client provided the unsupported and deprecated subprotocol \"${socket.protocol}\" used by subscriptions-transport-ws.` +\n                    'Please see https://www.apollographql.com/docs/apollo-server/data/subscriptions/#switching-from-subscriptions-transport-ws.');\n            closed(code, String(reason));\n        });\n    });\n    return {\n        dispose: async () => {\n            for (const client of ws.clients) {\n                client.close(1001, 'Going away');\n            }\n            ws.removeAllListeners();\n            await new Promise((resolve, reject) => {\n                ws.close((err) => (err ? reject(err) : resolve()));\n            });\n        },\n    };\n}\n"],"names":["exports","maybeNode","maybeKind","kind","kindValues","has","Location","constructor","startToken","endToken","source","this","start","end","Symbol","toStringTag","toJSON","Token","line","column","value","prev","next","QueryDocumentKeys","Name","Document","OperationDefinition","VariableDefinition","Variable","SelectionSet","Field","Argument","FragmentSpread","InlineFragment","FragmentDefinition","IntValue","FloatValue","StringValue","BooleanValue","NullValue","EnumValue","ListValue","ObjectValue","ObjectField","Directive","NamedType","ListType","NonNullType","SchemaDefinition","OperationTypeDefinition","ScalarTypeDefinition","ObjectTypeDefinition","FieldDefinition","InputValueDefinition","InterfaceTypeDefinition","UnionTypeDefinition","EnumTypeDefinition","EnumValueDefinition","InputObjectTypeDefinition","DirectiveDefinition","SchemaExtension","ScalarTypeExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension","Set","Object","keys","OperationTypeNode","EMPTY_BUFFER","FastBuffer","Buffer","species","_mask","mask","output","offset","length","i","_unmask","buffer","module","concat","list","totalLength","target","allocUnsafe","buf","set","byteOffset","toArrayBuffer","byteLength","slice","toBuffer","data","readOnly","isBuffer","ArrayBuffer","isView","from","unmask","process","env","WS_NO_BUFFER_UTIL","bufferUtil","e","BINARY_TYPES","hasBlob","Blob","push","alloc","GUID","kForOnEventAttribute","kListener","kStatusCode","kWebSocket","NOOP","kCode","kData","kError","kMessage","kReason","kTarget","kType","kWasClean","Event","type","defineProperty","prototype","enumerable","CloseEvent","options","super","undefined","code","reason","wasClean","ErrorEvent","error","message","MessageEvent","EventTarget","addEventListener","handler","listener","listeners","wrapper","isBinary","event","toString","callListener","_closeFrameReceived","_closeFrameSent","once","on","removeEventListener","removeListener","thisArg","handleEvent","call","tokenChars","dest","name","elem","format","extensions","map","extension","configurations","Array","isArray","params","k","values","v","join","parse","header","offers","create","extensionName","paramName","mustUnescape","isEscaping","inQuotes","charCodeAt","SyntaxError","replace","token","kDone","kRun","concurrency","pending","Infinity","jobs","add","job","shift","zlib","Limiter","TRAILER","kPerMessageDeflate","kTotalLength","kCallback","kBuffers","zlibLimiter","deflateOnData","chunk","inflateOnData","_maxPayload","RangeError","reset","inflateOnError","err","_inflate","isServer","maxPayload","_options","_threshold","threshold","_isServer","_deflate","concurrencyLimit","offer","serverNoContextTakeover","server_no_context_takeover","clientNoContextTakeover","client_no_context_takeover","serverMaxWindowBits","server_max_window_bits","clientMaxWindowBits","client_max_window_bits","accept","normalizeParams","acceptAsServer","acceptAsClient","cleanup","close","callback","Error","opts","accepted","find","response","forEach","key","num","Number","isInteger","TypeError","decompress","fin","done","_decompress","result","compress","_compress","endpoint","windowBits","Z_DEFAULT_WINDOWBITS","createInflateRaw","zlibInflateOptions","write","flush","_readableState","endEmitted","createDeflateRaw","zlibDeflateOptions","Z_SYNC_FLUSH","Writable","PerMessageDeflate","isValidStatusCode","isValidUTF8","_allowSynchronousEvents","allowSynchronousEvents","_binaryType","binaryType","_extensions","_skipUTF8Validation","skipUTF8Validation","_bufferedBytes","_buffers","_compressed","_payloadLength","_fragmented","_masked","_fin","_opcode","_totalPayloadLength","_messageLength","_fragments","_errored","_loop","_state","_write","encoding","cb","startLoop","consume","n","dst","Uint8Array","getInfo","getPayloadLength16","getPayloadLength64","getMask","getData","createError","compressed","haveLength","readUInt16BE","readUInt32BE","Math","pow","controlMessage","dataMessage","messageLength","fragments","emit","setImmediate","ErrorCtor","prefix","statusCode","errorCode","captureStackTrace","Duplex","randomFillSync","isBlob","applyMask","kByteLength","maskBuffer","RANDOM_POOL_SIZE","randomPool","randomPoolPointer","Sender","socket","generateMask","_generateMask","_maskBuffer","_socket","_firstFragment","_queue","onerror","frame","dataLength","merge","skipMasking","payloadLength","opcode","rsv1","writeUInt16BE","writeUIntBE","enqueue","dispatch","sendFrame","ping","size","getBlobData","pong","send","perMessageDeflate","binary","blob","arrayBuffer","then","destroyed","nextTick","callCallbacks","dequeue","catch","onError","_","Reflect","apply","cork","uncork","sender","emitClose","stream","duplexOnEnd","_writableState","finished","destroy","duplexOnError","listenerCount","ws","terminateOnDestroy","duplex","autoDestroy","objectMode","writableObjectMode","msg","pause","_destroy","readyState","CLOSED","called","terminate","_final","CONNECTING","_read","isPaused","resume","protocols","protocol","isUtf8","_isValidUTF8","len","WS_NO_UTF_8_VALIDATE","EventEmitter","http","createHash","subprotocol","WebSocket","keyRegex","server","socketOnError","abortHandshake","headers","STATUS_CODES","Connection","h","abortHandshakeOrEmitwsClientError","req","autoPong","handleProtocols","clientTracking","verifyClient","noServer","backlog","host","path","port","_server","createServer","res","body","writeHead","listen","emitConnection","bind","_removeListeners","addListeners","listening","upgrade","head","handleUpgrade","clients","_shouldEmitClose","address","shouldHandle","index","url","indexOf","version","method","toLowerCase","test","secWebSocketProtocol","secWebSocketExtensions","info","origin","secure","authorized","encrypted","verified","completeUpgrade","readable","writable","update","digest","_protocol","setSocket","delete","https","net","tls","randomBytes","Readable","URL","Receiver","closeTimeout","kAborted","protocolVersions","readyStates","subprotocolRegex","_closeCode","_closeMessage","_closeTimer","_errorEmitted","_paused","_readyState","_receiver","_sender","_bufferedAmount","_redirects","initAsClient","_autoPong","includes","bufferedAmount","onclose","onopen","onmessage","_url","receiver","receiverOnConclude","receiverOnDrain","receiverOnError","receiverOnMessage","receiverOnPing","receiverOnPong","senderOnError","setTimeout","setNoDelay","unshift","socketOnClose","socketOnData","socketOnEnd","OPEN","removeAllListeners","CLOSING","errorEmitted","setCloseTimer","_req","sendAfterClose","needDrain","websocket","protocolVersion","followRedirects","maxRedirects","socketPath","hostname","timeout","parsedUrl","href","isSecure","isIpcUrl","invalidUrlMessage","pathname","hash","emitErrorAndClose","defaultPort","request","protocolSet","createConnection","tlsConnect","netConnect","startsWith","Upgrade","search","handshakeTimeout","Origin","username","password","auth","parts","split","_originalIpc","_originalSecure","_originalHostOrSocketPath","entries","isSameHost","authorization","cookie","location","addr","abort","serverProt","protError","extensionNames","finishRequest","connect","servername","isIP","setHeader","receiverOnFinish","read","clearTimeout","property","get","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","commentsRegistry","resetComments","collectComment","node","entityName","pushComment","fields","field","isFieldDefinitionNode","arguments","arg","entity","argument","comment","getComment","printComment","maybeArray","separator","filter","x","hasMultilineItems","some","str","indent","maybeString","block","array","wrap","printDocASTReducer","leave","definitions","varDefs","variableDefinitions","operation","directives","selectionSet","variable","defaultValue","selections","alias","args","argsLine","typeCondition","isBlockString","isDescription","escaped","printBlockString","JSON","stringify","operationTypes","interfaces","types","repeatable","locations","printDocASTReducerWithComments","reduce","_key","_parent","ancestors","parent","Boolean","items","description","rawValue","loc","comments","TokenKind","COMMENT","String","reverse","getLeadingCommentBlock","rawString","lines","commonIndent","leadingWhitespace","getBlockStringIndentation","isBlank","pop","dedentBlockStringValue","MAX_RECURSIVE_DEPTH","inspect","formatValue","seenValues","previouslySeenValues","formatError","formatArray","errors","isJSONable","jsonValue","object","tag","getObjectTag","properties","formatObject","formatObjectValue","stack","astFromType","isNonNullType","innerType","ofType","Kind","NON_NULL_TYPE","isListType","LIST_TYPE","NAMED_TYPE","NAME","astFromValueUntyped","NULL","valuesNodes","item","itemNode","LIST","fieldNodes","fieldName","ast","OBJECT_FIELD","OBJECT","BOOLEAN","INT","isFinite","stringNum","integerStringRegExp","FLOAT","STRING","astFromValue","astValue","itemType","iterator","isIterableObject","isInputObjectType","isObjectLike","getFields","fieldValue","isLeafType","serialized","serialize","isEnumType","ENUM","console","assert","getDescriptionNode","obj","astNode","getDirectivesInExtensions","pathToDirectivesInExtensions","acc","pathSegment","nodeToString","a","compareNodes","b","customFn","aStr","bStr","compareStrings","isSome","input","memoize1","fn","memoize1cache","WeakMap","a1","cachedValue","newValue","schema","rootTypes","getRootTypes","rootTypeMap","getRootTypeMap","Map","queryType","getQueryType","mutationType","getMutationType","subscriptionType","getSubscriptionType","getDocumentNodeFromSchema","typesMap","getTypeMap","schemaNode","operationTypeMap","nodes","extensionASTNodes","extensionASTNode","operationTypeDefinitionNode","operationTypeNode","rootType","rootTypeAST","OPERATION_TYPE_DEFINITION","getDirectiveNodes","SCHEMA_DEFINITION","SCHEMA_EXTENSION","descriptionNode","astFromSchema","getDirectives","directive","isSpecifiedDirective","astFromDirective","typeName","isPredefinedScalar","isSpecifiedScalarType","isIntrospection","isIntrospectionType","isObjectType","astFromObjectType","isInterfaceType","astFromInterfaceType","isUnionType","astFromUnionType","astFromInputObjectType","astFromEnumType","isScalarType","astFromScalarType","DOCUMENT","DIRECTIVE_DEFINITION","astFromArg","isRepeatable","directivesInExtensions","makeDirectiveNodes","getDeprecatableDirectiveNodes","directiveNodesBesidesDeprecated","deprecatedDirectiveNode","deprecationReason","makeDirectiveNode","GraphQLDeprecatedDirective","INPUT_VALUE_DEFINITION","OBJECT_TYPE_DEFINITION","astFromField","getInterfaces","iFace","INTERFACE_TYPE_DEFINITION","UNION_TYPE_DEFINITION","getTypes","INPUT_OBJECT_TYPE_DEFINITION","astFromInputField","ENUM_TYPE_DEFINITION","getValues","ENUM_VALUE_DEFINITION","astFromEnumValue","specifiedByValue","directiveNode","specifiedByArgs","SCALAR_TYPE_DEFINITION","FIELD_DEFINITION","directiveArguments","argName","argValue","ARGUMENT","DIRECTIVE","directiveValues","directiveNodes","directiveName","arrayOrSingleValue","getDirective","CompareVal","directiveAlreadyExists","directivesArr","otherDirective","isRepeatableDirective","nameAlreadyExists","namesArr","mergeArguments","a2","existingIndex","findIndex","existingArg","deduplicateLists","targetVal","sourceVal","mergeDirectives","d1","d2","config","reverseOrder","reverseDirectives","asFirst","all","firstAt","d","dup","deduplicateDirectives","existingDirectiveIndex","existingDirective","mergeDirective","existingNode","existingArgs","filterFn","val","mergeEnumValues","first","second","consistentEnumMerge","reversed","enumValueMap","firstValue","secondValue","enumValue","sort","mergeEnum","e1","e2","convertExtensions","args1","args2","current","dupIndex","reverseArguments","deduplicateArguments","extractType","visitedType","isWrappingTypeNode","isListTypeNode","isNonNullTypeNode","printTypeNode","defaultStringComparator","A_EQUALS_B","A_SMALLER_THAN_B","A_GREATER_THAN_B","fieldAlreadyExists","fieldsArr","otherField","resultIndex","mergeFields","f1","f2","existing","ignoreFieldConflicts","newField","onFieldTypeConflict","throwOnConflict","preventConflicts","exclusions","ignoreNullability","aType","bType","t1","t2","safeChangeForFieldType","oldType","newType","mergeInputType","mergeNamedTypeArray","other","mergeInterface","mergeScalar","DEFAULT_OPERATION_TYPE_NAME_MAP","query","mutation","subscription","mergeOperationTypes","opNodeList","existingOpNodeList","finalOpNodeList","opNodeType","opNode","mergeSchemaDefs","mergeType","mergeUnion","UNION_TYPE_EXTENSION","schemaDefSymbol","mergeGraphQLNodes","mergedResultMap","nodeDefinition","commentDescriptions","OBJECT_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","SCALAR_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","visitTypeSources","typeSource","allDirectives","allNodes","visitedTypeSources","isSchema","Source","isSourceTypes","isDefinitionNode","mergeGraphQLTypes","mergedDirectives","mergedNodes","useSchemaDefinition","schemaDef","opTypeDefNodeType","operationType","existingPossibleRootType","forceSchemaDefinition","mergedNodeDefinitions","sortFn","extendedTypeof","isObject","isAsyncGenerator","asyncIterator","return","areGraphQLErrors","every","ob","GRAPHQL_TRANSPORT_WS_PROTOCOL","CloseCode","MessageType","validateMessage","ConnectionInit","ConnectionAck","Ping","Pong","payload","Subscribe","id","variables","operationName","Next","Complete","stringifyMessage","replacer","__asyncValues","o","m","__values","verb","Promise","resolve","reject","settle","makeServer","context","roots","validate","execute","subscribe","connectionInitWaitTimeout","onConnect","onDisconnect","onClose","onSubscribe","onOperation","onNext","onComplete","jsonMessageReviver","reviver","jsonMessageReplacer","opened","extra","ctx","connectionInitReceived","acknowledged","subscriptions","SubprotocolNotAcceptable","async","connectionInitWait","ConnectionInitialisationTimeout","onMessage","_a","e_1","_b","_c","_d","parseMessage","BadRequest","TooManyInitialisationRequests","connectionParams","permittedOrPayload","Forbidden","onPing","onPong","Unauthorized","SubscriberAlreadyExists","nextMessage","maybeResult","assign","errorMessage","maybeErrors","complete","notifyClient","completeMessage","execArgs","maybeExecArgsOrErrors","document","variableValues","validationErrors","operationAST","getOperationAST","GraphQLError","operationResult","rootValue","contextValue","operationResult_1_1","_e","operationResult_1","e_1_1","subs","sub","p","trim","users","email","queryResolvers","Query","hello","user","_ref","pubsub","PubSub","mutationResolvers","Mutation","createUser","newUser","_objectSpread","updateUser","_ref2","deleteUser","_ref3","deletedUser","splice","publish","userDeleted","success","Subscription","greetings","_regeneratorRuntime","t","r","hasOwnProperty","c","u","define","configurable","Generator","Context","makeInvokeMethod","tryCatch","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","__await","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","charAt","stop","rval","handle","finish","delegateYield","asyncGeneratorStep","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","_defineProperty","getOwnPropertyDescriptors","defineProperties","toPrimitive","_toPrimitive","_toPropertyKey","setInterval","typeDefs","doc","visit","printWithComments","mergeTypeDefs","loadFilesSync","resolvers","createSchema","yoga","createYoga","graphqlEndpoint","graphiql","subscriptionsProtocol","app","express","use","cors","__dirname","clientBuildPath","sendFile","status","json","_onSubscribe","wsServer","WebSocketServer","keepAlive","firstErr","client","InternalServerError","pongWait","pingInterval","closed","clearInterval","useServer","_callee","_yoga$getEnveloped","contextFactory","_context","getEnveloped","t0","t3","t4","t5","_next","_throw","_x","_x2","PORT","log"],"sourceRoot":""}