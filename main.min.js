import express from"express";import"colors";import{createSchema,createYoga}from"graphql-yoga";import{loadFilesSync}from"@graphql-tools/load-files";import{mergeTypeDefs}from"@graphql-tools/merge";const typesArray=loadFilesSync("./schema/typeDefs",{extensions:["gql","graphql"]});export const typeDefs=mergeTypeDefs(typesArray);import{queryResolvers}from"./resolvers/queryResolvers.js";import{mutationResolvers}from"./resolvers/mutationResolvers.js";import{fileURLToPath}from"url";import{dirname,join}from"path";const resolvers={...queryResolvers,...mutationResolvers};const schema=createSchema({typeDefs:typeDefs,resolvers:resolvers});const yoga=createYoga({graphqlEndpoint:"/graphql",schema:schema,graphiql:true});const app=express();const __filename=fileURLToPath(import.meta.url);const __dirname=dirname(__filename);const clientBuildPath=join(__dirname,"./client/dist");app.use(express.static(clientBuildPath));app.get("*",((e,r,s)=>{if(e.path.startsWith("/graphql")||e.path==="/submit"){return s()}r.sendFile(join(clientBuildPath,"index.html"))}));app.use("/graphql",yoga);app.get("/submit",((e,r)=>{r.send("Submit endpoint")}));const PORT=process.env.PORT||4e3;app.listen(PORT,(()=>{console.log(`Server is running on http://localhost:${PORT}/graphql`.america)}));